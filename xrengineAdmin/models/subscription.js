// This model was generated by Lumber. However, you remain in control of your models.
// Learn how here: https://docs.forestadmin.com/documentation/v/v6/reference-guide/models/enrich-your-models
module.exports = (sequelize, DataTypes) => {
  const { Sequelize } = sequelize;
  // This section contains the fields of your model, mapped to your table's columns.
  // Learn more here: https://docs.forestadmin.com/documentation/v/v6/reference-guide/models/enrich-your-models#declaring-a-new-field-in-a-model
  const Subscription = sequelize.define('subscription', {
    id: {
      type: DataTypes.STRING,
      primaryKey: true,
      allowNull: false,
    },
    amount: {
      type: DataTypes.DOUBLE,
      allowNull: false,
    },
    currency: {
      type: DataTypes.STRING,
      defaultValue: "usd",
      allowNull: false,
    },
    quantity: {
      type: DataTypes.INTEGER,
      allowNull: false,
    },
    status: {
      type: DataTypes.INTEGER,
      defaultValue: 0,
    },
    totalSeats: {
      type: DataTypes.INTEGER,
    },
    unusedSeats: {
      type: DataTypes.INTEGER,
    },
    pendingSeats: {
      type: DataTypes.INTEGER,
    },
    filledSeats: {
      type: DataTypes.INTEGER,
    },
    createdAt: {
      type: DataTypes.DATE,
    },
    updatedAt: {
      type: DataTypes.DATE,
    },
  }, {
    tableName: 'subscription',
  });

  // This section contains the relationships for this model. See: https://docs.forestadmin.com/documentation/v/v6/reference-guide/relationships#adding-relationships.
  Subscription.associate = (models) => {
    Subscription.belongsTo(models.subscriptionType, {
      foreignKey: {
        name: 'planKey',
        field: 'plan',
      },
      targetKey: 'plan',
      as: 'plan',
    });
    Subscription.belongsTo(models.user, {
      foreignKey: {
        name: 'userIdKey',
        field: 'userId',
      },
      as: 'user',
    });
    Subscription.hasMany(models.seat, {
      foreignKey: {
        name: 'subscriptionIdKey',
        field: 'subscriptionId',
      },
      as: 'seats',
    });
  };

  return Subscription;
};
