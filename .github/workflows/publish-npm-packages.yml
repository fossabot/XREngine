name: publish-npm

on:
  release:
    types: [ created ]
#  push:
#    tags:
#      - v*

jobs:
  publish-npm:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - uses: actions/setup-node@v2
        with:
          node-version: 16.x
          registry-url: https://npm.pkg.github.com/
          scope: '@XRFoundation'
#      - run: npm i
      - run: git config user.name xrengine-ci
      - run: git config user.email ci-bot@xrengine.io
      - run: echo lerna_version=$(node -p 'require("./lerna.json").version') >> $GITHUB_ENV
      - run: git switch -c ${{ github.event.release.target_commitish }}
        if: ${{ github.event.release.target_commitish != '' }}
      - run: npm run version-increment-no-tag ${{ github.event.release.tag_name }}
        if: ${{ github.event.release.tag_name != '' }}
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{secrets.PACKAGE_ADMIN_TOKEN}}
      - run: npm run version-increment-no-tag
        if: ${{ github.event.release.tag_name == '' }}
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{secrets.PACKAGE_ADMIN_TOKEN}}
      - run: git add .
        if: ${{ github.event.release.tag_name != env.lerna_version }}
      - run: git commit -m ${{ github.event.release.tag_name }}
        if: ${{ github.event.release.tag_name != env.lerna_version && github.event.release.tag_name != '' }}
      - run: git commit -m v${{ env.lerna_version }}
        if: ${{ github.event.release.tag_name != env.lerna_version && github.event.release.tag_name == '' }}
      - run: git push -f origin ${{ github.event.release.target_commitish }}
        if: ${{ github.event.release.tag_name != env.lerna_version }}
      - run: npm run publish-no-verify
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
#      - run: npm login --scope=@XRFoundation --registry=https://npm.pkg.github.com
      - run: npm run update-name-gh-package
      - run: git add .
      - run: git commit -m 'GH Packages'
      - run: npm run publish-github
        env:
          NODE_AUTH_TOKEN: ${{secrets.PACKAGE_ADMIN_TOKEN}}