{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport 'aframe';\nimport 'aframe-particle-system-component'; //TODO: Add types for aframe-react and remove the ignore\n//@ts-ignore\n\nvar NetworkedScene = /*#__PURE__*/function (_React$Component) {\n  _inherits(NetworkedScene, _React$Component);\n\n  var _super = _createSuper(NetworkedScene);\n\n  function NetworkedScene() {\n    _classCallCheck(this, NetworkedScene);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(NetworkedScene, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", null, __jsx(\"a-scene\", {\n        \"networked-scene\": \"room: 1;\\naudio: true;\\nadapter: janus;\\nserverURL: ws://localhost:3000;// To do- this will be replaced by the shard manager\\n\",\n        renderer: \"antialias: true\",\n        background: \"color: #FAFAFA\"\n      }, __jsx(\"a-box\", {\n        position: \"-1 0.5 -3\",\n        rotation: \"0 45 0\",\n        color: \"#4CC3D9\",\n        shadow: true\n      })));\n    }\n  }]);\n\n  return NetworkedScene;\n}(React.Component);\n\nexport { NetworkedScene as default };","map":null,"metadata":{},"sourceType":"module"}