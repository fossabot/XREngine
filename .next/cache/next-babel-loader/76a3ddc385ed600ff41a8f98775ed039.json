{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/* global AFRAME, NAF */\nimport React from 'react';\nimport dynamic from 'next/dynamic';\nimport ReactDOM from 'react-dom'; //Networking\n\nvar SceneRoot = /*#__PURE__*/function (_React$Component) {\n  _inherits(SceneRoot, _React$Component);\n\n  var _super = _createSuper(SceneRoot);\n\n  function SceneRoot(props) {\n    var _this;\n\n    _classCallCheck(this, SceneRoot);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      loggedIn: false // TODO: Add auth and redux store\n\n    });\n\n    return _this;\n  }\n\n  _createClass(SceneRoot, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        id: \"sceneContainer\"\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log(\"component mounted\");\n      var Scene = dynamic(function () {\n        _this2.state.loggedIn ? import('./scene-networked') : import('./scene-local');\n      }, {\n        ssr: false,\n        loadableGenerated: {\n          webpack: function webpack() {\n            return [require.resolveWeak('./scene-networked'), require.resolveWeak('./scene-local')];\n          },\n          modules: ['./scene-networked', './scene-local']\n        }\n      });\n      ReactDOM.render(__jsx(Scene, null), document.querySelector('#sceneContainer'));\n    }\n  }]);\n\n  return SceneRoot;\n}(React.Component);\n\nexport { SceneRoot as default };","map":null,"metadata":{},"sourceType":"module"}