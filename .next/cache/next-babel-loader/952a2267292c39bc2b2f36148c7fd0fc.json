{"ast":null,"code":"var _jsxFileName = \"/home/beast/Documents/xrchat-client/components/xr/scene/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* global AFRAME, NAF */\nimport React from 'react';\nimport dynamic from 'next/dynamic';\nimport ReactDOM from 'react-dom'; //Networking\n\nexport default class SceneRoot extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"state\", {\n      loggedIn: false // TODO: Add auth and vuex store\n\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      id: \"sceneContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\nconst Scene = dynamic(() => {\n  true ? import('./scene-networked') : import('./scene-local');\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('./scene-networked'), require.resolveWeak('./scene-local')],\n    modules: ['./scene-networked', './scene-local']\n  }\n});\nReactDOM.render(__jsx(Scene, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 17\n  }\n}), document.querySelector('#sceneContainer'));","map":{"version":3,"sources":["/home/beast/Documents/xrchat-client/components/xr/scene/index.tsx"],"names":["React","dynamic","ReactDOM","SceneRoot","Component","constructor","props","loggedIn","render","Scene","ssr","document","querySelector"],"mappings":";;;;;AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CAEA;;AACA,eAAe,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAwC;AAKrDC,EAAAA,WAAW,CAACC,KAAD,EAAa;AACtB,UAAMA,KAAN;;AADsB,mCAJhB;AACNC,MAAAA,QAAQ,EAAE,KADJ,CACU;;AADV,KAIgB;AAEvB;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,EAAE,EAAC,gBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AAboD;AAiBvD,MAAMC,KAAK,GAAGR,OAAO,CAAC,MAAY;AAChC,SAAO,OAAO,mBAAP,CAAP,GAAsC,OAAO,eAAP,CAAtC;AACD,CAFoB,EAElB;AACDS,EAAAA,GAAG,EAAE,KADJ;AAAA;AAAA,wCADa,mBACb,uBAD4C,eAC5C;AAAA,cADa,mBACb,EAD4C,eAC5C;AAAA;AAAA,CAFkB,CAArB;AAMAR,QAAQ,CAACM,MAAT,CAAgB,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAA2BG,QAAQ,CAACC,aAAT,CAAuB,iBAAvB,CAA3B","sourcesContent":["/* global AFRAME, NAF */\n\nimport React from 'react'\nimport dynamic from 'next/dynamic';\nimport ReactDOM from 'react-dom';\n\n//Networking\nexport default class SceneRoot extends React.Component {\n  state = {\n    loggedIn: false // TODO: Add auth and vuex store\n  };\n\n  constructor(props: any) {\n    super(props); \n  }\n\n  render() {\n    return (\n      <div id=\"sceneContainer\" />\n    )\n  }\n\n}\n\nconst Scene = dynamic(() : any => {\n  true ? import('./scene-networked') :  import('./scene-local')\n}, {\n  ssr: false\n})\n\nReactDOM.render(<Scene />, document.querySelector('#sceneContainer'))"]},"metadata":{},"sourceType":"module"}