{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/* global AFRAME, NAF */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport dynamic from 'next/dynamic';\ndynamic( // @ts-ignore\nfunction () {\n  // @ts-ignore\n  import('webrtc-adapter');\n  import('aframe'); // @ts-ignore\n\n  import('networked-aframe'); // @ts-ignore\n\n  import('naf-janus-adapter/dist/naf-janus-adapter');\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('webrtc-adapter'), require.resolveWeak('aframe'), require.resolveWeak('networked-aframe'), require.resolveWeak('naf-janus-adapter/dist/naf-janus-adapter')];\n    },\n    modules: ['webrtc-adapter', 'aframe', 'networked-aframe', 'naf-janus-adapter/dist/naf-janus-adapter']\n  }\n});\nvar NetworkedScene = dynamic(function () {\n  import('../components/xr/scene/scene-networked');\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('../components/xr/scene/scene-networked')];\n    },\n    modules: ['../components/xr/scene/scene-networked']\n  }\n});\nvar LocalScene = dynamic(function () {\n  import('../components/xr/scene/scene-local');\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('../components/xr/scene/scene-local')];\n    },\n    modules: ['../components/xr/scene/scene-local']\n  }\n}); //Networking\n\nvar Scene = /*#__PURE__*/function (_React$Component) {\n  _inherits(Scene, _React$Component);\n\n  var _super = _createSuper(Scene);\n\n  _createClass(Scene, [{\n    key: \"isLoggedIn\",\n    value: function isLoggedIn() {\n      return this.state.loggedIn;\n    }\n  }]);\n\n  function Scene(props) {\n    var _this;\n\n    _classCallCheck(this, Scene);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      loggedIn: true // TODO: Add auth and vuex store\n\n    });\n\n    return _this;\n  }\n\n  _createClass(Scene, [{\n    key: \"render\",\n    value: function render() {\n      if (this.isLoggedIn()) return __jsx(NetworkedScene, null);else return __jsx(LocalScene, null);\n    }\n  }]);\n\n  return Scene;\n}(React.Component);\n\nReactDOM.render(__jsx(Scene, null), document.querySelector('#sceneContainer'));","map":null,"metadata":{},"sourceType":"module"}