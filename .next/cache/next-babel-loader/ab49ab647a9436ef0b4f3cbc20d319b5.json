{"ast":null,"code":"var _jsxFileName = \"/home/beast/Documents/xrchat-client/pages/aframetest.tsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\n// @ts-ignore\nimport { Entity, Scene } from 'aframe-react';\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"state\", {\n      appRendered: false,\n      color: 'red'\n    });\n  }\n\n  componentDidMount() {\n    if (false) {\n      require('aframe');\n\n      require('aframe-particle-system-component');\n\n      this.setState({\n        appRendered: true\n      });\n    }\n  }\n\n  changeColor() {\n    const colors = ['red', 'orange', 'yellow', 'green', 'blue'];\n    this.setState({\n      color: colors[Math.floor(Math.random() * colors.length)]\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      style: {\n        height: '100%',\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, this.state.appRendered && __jsx(Scene, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, __jsx(\"a-assets\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, __jsx(\"img\", {\n      id: \"groundTexture\",\n      src: \"https://cdn.aframe.io/a-painter/images/floor.jpg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }\n    }), __jsx(\"img\", {\n      id: \"skyTexture\",\n      src: \"https://cdn.aframe.io/a-painter/images/sky.jpg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    })), __jsx(Entity, {\n      primitive: \"a-plane\",\n      src: \"#groundTexture\",\n      rotation: \"-90 0 0\",\n      height: \"100\",\n      width: \"100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }), __jsx(Entity, {\n      primitive: \"a-light\",\n      type: \"ambient\",\n      color: \"#445451\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }), __jsx(Entity, {\n      primitive: \"a-light\",\n      type: \"point\",\n      intensity: \"2\",\n      position: \"2 4 4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }), __jsx(Entity, {\n      primitive: \"a-sky\",\n      height: \"2048\",\n      radius: \"30\",\n      src: \"#skyTexture\",\n      \"theta-length\": \"90\",\n      width: \"2048\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }), __jsx(Entity, {\n      \"particle-system\": {\n        preset: 'snow',\n        particleCount: 2000\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }), __jsx(Entity, {\n      text: {\n        value: 'Hello, A-Frame React!',\n        align: 'center'\n      },\n      position: {\n        x: 0,\n        y: 2,\n        z: -1\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }), __jsx(Entity, {\n      id: \"box\",\n      geometry: {\n        primitive: 'box'\n      },\n      material: {\n        color: this.state.color,\n        opacity: 0.6\n      },\n      animation__rotate: {\n        property: 'rotation',\n        dur: 2000,\n        loop: true,\n        to: '360 360 360'\n      },\n      animation__scale: {\n        property: 'scale',\n        dir: 'alternate',\n        dur: 100,\n        loop: true,\n        to: '1.1 1.1 1.1'\n      },\n      position: {\n        x: 0,\n        y: 1,\n        z: -3\n      },\n      events: {\n        click: this.changeColor.bind(this)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, __jsx(Entity, {\n      animation__scale: {\n        property: 'scale',\n        dir: 'alternate',\n        dur: 100,\n        loop: true,\n        to: '2 2 2'\n      },\n      geometry: {\n        primitive: 'box',\n        depth: 0.2,\n        height: 0.2,\n        width: 0.2\n      },\n      material: {\n        color: '#24CAFF'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }\n    })), __jsx(Entity, {\n      primitive: \"a-camera\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, __jsx(Entity, {\n      primitive: \"a-cursor\",\n      animation__click: {\n        property: 'scale',\n        startEvents: 'click',\n        from: '0.1 0.1 0.1',\n        to: '1 1 1',\n        dur: 150\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/home/beast/Documents/xrchat-client/pages/aframetest.tsx"],"names":["React","Entity","Scene","Component","constructor","props","appRendered","color","componentDidMount","require","setState","changeColor","colors","Math","floor","random","length","render","height","width","state","preset","particleCount","value","align","x","y","z","primitive","opacity","property","dur","loop","to","dir","click","bind","depth","startEvents","from"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Head from 'next/head'\n// @ts-ignore\nimport {Entity, Scene} from 'aframe-react';\n\nexport default class extends React.Component {\n\n    state = {\n        appRendered: false,\n        color: 'red'\n      };\n\n  constructor(props : any) {\n    super(props);\n  }\n\n  componentDidMount() {\n    if (typeof window !== 'undefined') {\n      require('aframe')\n      require('aframe-particle-system-component')\n      this.setState({ appRendered: true })\n    }\n  }\n\n  changeColor() {\n    const colors = ['red', 'orange', 'yellow', 'green', 'blue'];\n    this.setState({\n      color: colors[Math.floor(Math.random() * colors.length)]\n    });\n  }\n\n  render() {\n    return (\n      <div style={{ height: '100%', width: '100%' }}>\n\n        {this.state.appRendered &&\n          <Scene>\n            <a-assets>\n              <img id=\"groundTexture\" src=\"https://cdn.aframe.io/a-painter/images/floor.jpg\"/>\n              <img id=\"skyTexture\" src=\"https://cdn.aframe.io/a-painter/images/sky.jpg\"/>\n            </a-assets>\n\n            <Entity primitive=\"a-plane\" src=\"#groundTexture\" rotation=\"-90 0 0\" height=\"100\" width=\"100\"/>\n            <Entity primitive=\"a-light\" type=\"ambient\" color=\"#445451\"/>\n            <Entity primitive=\"a-light\" type=\"point\" intensity=\"2\" position=\"2 4 4\"/>\n            <Entity primitive=\"a-sky\" height=\"2048\" radius=\"30\" src=\"#skyTexture\" theta-length=\"90\" width=\"2048\"/>\n            <Entity particle-system={{preset: 'snow', particleCount: 2000}}/>\n            <Entity text={{value: 'Hello, A-Frame React!', align: 'center'}} position={{x: 0, y: 2, z: -1}}/>\n\n            <Entity id=\"box\"\n              geometry={{primitive: 'box'}}\n              material={{color: this.state.color, opacity: 0.6}}\n              animation__rotate={{property: 'rotation', dur: 2000, loop: true, to: '360 360 360'}}\n              animation__scale={{property: 'scale', dir: 'alternate', dur: 100, loop: true, to: '1.1 1.1 1.1'}}\n              position={{x: 0, y: 1, z: -3}}\n              events={{click: this.changeColor.bind(this)}}>\n              <Entity animation__scale={{property: 'scale', dir: 'alternate', dur: 100, loop: true, to: '2 2 2'}}\n                      geometry={{primitive: 'box', depth: 0.2, height: 0.2, width: 0.2}}\n                      material={{color: '#24CAFF'}}/>\n            </Entity>\n\n            <Entity primitive=\"a-camera\">\n              <Entity primitive=\"a-cursor\" animation__click={{property: 'scale', startEvents: 'click', from: '0.1 0.1 0.1', to: '1 1 1', dur: 150}}/>\n            </Entity>\n          </Scene>\n        }\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}