{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/beast/Documents/xrchat-client/components/xr/scene/scene-local.tsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\n// @ts-ignore\nimport { Entity, Scene } from 'aframe-react';\n\nvar _default = /*#__PURE__*/function (_React$Component) {\n  _inherits(_default, _React$Component);\n\n  var _super = _createSuper(_default);\n\n  function _default(props) {\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      appRendered: false,\n      color: 'red'\n    });\n\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (true) {\n        require('aframe');\n\n        require('aframe-particle-system-component');\n\n        this.setState({\n          appRendered: true\n        });\n      }\n    }\n  }, {\n    key: \"changeColor\",\n    value: function changeColor() {\n      var colors = ['red', 'orange', 'yellow', 'green', 'blue'];\n      this.setState({\n        color: colors[Math.floor(Math.random() * colors.length)]\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function (_render) {\n      function render() {\n        return _render.apply(this, arguments);\n      }\n\n      render.toString = function () {\n        return _render.toString();\n      };\n\n      return render;\n    }(function () {\n      if (this.state.appRendered) return __jsx(Scene, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }\n      }, __jsx(\"a-assets\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }\n      }, __jsx(\"img\", {\n        id: \"groundTexture\",\n        src: \"https://cdn.aframe.io/a-painter/images/floor.jpg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }\n      }), __jsx(\"img\", {\n        id: \"skyTexture\",\n        src: \"https://cdn.aframe.io/a-painter/images/sky.jpg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }\n      })), __jsx(Entity, {\n        primitive: \"a-plane\",\n        src: \"#groundTexture\",\n        rotation: \"-90 0 0\",\n        height: \"100\",\n        width: \"100\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }\n      }), __jsx(Entity, {\n        primitive: \"a-light\",\n        type: \"ambient\",\n        color: \"#445451\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }\n      }), __jsx(Entity, {\n        primitive: \"a-light\",\n        type: \"point\",\n        intensity: \"2\",\n        position: \"2 4 4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      }), __jsx(Entity, {\n        primitive: \"a-sky\",\n        height: \"2048\",\n        radius: \"30\",\n        src: \"#skyTexture\",\n        \"theta-length\": \"90\",\n        width: \"2048\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }\n      }), __jsx(Entity, {\n        \"particle-system\": {\n          preset: 'snow',\n          particleCount: 2000\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }\n      }), __jsx(Entity, {\n        text: {\n          value: 'Hello, A-Frame React!',\n          align: 'center'\n        },\n        position: {\n          x: 0,\n          y: 2,\n          z: -1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }\n      }), __jsx(Entity, {\n        id: \"box\",\n        geometry: {\n          primitive: 'box'\n        },\n        material: {\n          color: this.state.color,\n          opacity: 0.6\n        },\n        animation__rotate: {\n          property: 'rotation',\n          dur: 2000,\n          loop: true,\n          to: '360 360 360'\n        },\n        animation__scale: {\n          property: 'scale',\n          dir: 'alternate',\n          dur: 100,\n          loop: true,\n          to: '1.1 1.1 1.1'\n        },\n        position: {\n          x: 0,\n          y: 1,\n          z: -3\n        },\n        events: {\n          click: this.changeColor.bind(this)\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }\n      }, __jsx(Entity, {\n        animation__scale: {\n          property: 'scale',\n          dir: 'alternate',\n          dur: 100,\n          loop: true,\n          to: '2 2 2'\n        },\n        geometry: {\n          primitive: 'box',\n          depth: 0.2,\n          height: 0.2,\n          width: 0.2\n        },\n        material: {\n          color: '#24CAFF'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }\n      })), __jsx(Entity, {\n        primitive: \"a-camera\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }\n      }, __jsx(Entity, {\n        primitive: \"a-cursor\",\n        animation__click: {\n          property: 'scale',\n          startEvents: 'click',\n          from: '0.1 0.1 0.1',\n          to: '1 1 1',\n          dur: 150\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }\n      })));else render(null);\n    })\n  }]);\n\n  return _default;\n}(React.Component);\n\nexport { _default as default };","map":{"version":3,"sources":["/home/beast/Documents/xrchat-client/components/xr/scene/scene-local.tsx"],"names":["React","Entity","Scene","props","appRendered","color","require","setState","colors","Math","floor","random","length","state","preset","particleCount","value","align","x","y","z","primitive","opacity","property","dur","loop","to","dir","click","changeColor","bind","depth","height","width","startEvents","from","render","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Head from 'next/head'\n// @ts-ignore\nimport {Entity, Scene} from 'aframe-react';\n\nexport default class extends React.Component {\n\n    state = {\n        appRendered: false,\n        color: 'red'\n      };\n\n  constructor(props : any) {\n    super(props);\n  }\n\n  componentDidMount() {\n    if (typeof window !== 'undefined') {\n      require('aframe')\n      require('aframe-particle-system-component')\n      this.setState({ appRendered: true })\n    }\n  }\n\n  changeColor() {\n    const colors = ['red', 'orange', 'yellow', 'green', 'blue'];\n    this.setState({\n      color: colors[Math.floor(Math.random() * colors.length)]\n    });\n  }\n\n  render() {\n        if (this.state.appRendered)\n        return (\n          <Scene>\n            <a-assets>\n              <img id=\"groundTexture\" src=\"https://cdn.aframe.io/a-painter/images/floor.jpg\"/>\n              <img id=\"skyTexture\" src=\"https://cdn.aframe.io/a-painter/images/sky.jpg\"/>\n            </a-assets>\n\n            <Entity primitive=\"a-plane\" src=\"#groundTexture\" rotation=\"-90 0 0\" height=\"100\" width=\"100\"/>\n            <Entity primitive=\"a-light\" type=\"ambient\" color=\"#445451\"/>\n            <Entity primitive=\"a-light\" type=\"point\" intensity=\"2\" position=\"2 4 4\"/>\n            <Entity primitive=\"a-sky\" height=\"2048\" radius=\"30\" src=\"#skyTexture\" theta-length=\"90\" width=\"2048\"/>\n            <Entity particle-system={{preset: 'snow', particleCount: 2000}}/>\n            <Entity text={{value: 'Hello, A-Frame React!', align: 'center'}} position={{x: 0, y: 2, z: -1}}/>\n\n            <Entity id=\"box\"\n              geometry={{primitive: 'box'}}\n              material={{color: this.state.color, opacity: 0.6}}\n              animation__rotate={{property: 'rotation', dur: 2000, loop: true, to: '360 360 360'}}\n              animation__scale={{property: 'scale', dir: 'alternate', dur: 100, loop: true, to: '1.1 1.1 1.1'}}\n              position={{x: 0, y: 1, z: -3}}\n              events={{click: this.changeColor.bind(this)}}>\n              <Entity animation__scale={{property: 'scale', dir: 'alternate', dur: 100, loop: true, to: '2 2 2'}}\n                      geometry={{primitive: 'box', depth: 0.2, height: 0.2, width: 0.2}}\n                      material={{color: '#24CAFF'}}/>\n            </Entity>\n\n            <Entity primitive=\"a-camera\">\n              <Entity primitive=\"a-cursor\" animation__click={{property: 'scale', startEvents: 'click', from: '0.1 0.1 0.1', to: '1 1 1', dur: 150}}/>\n            </Entity>\n          </Scene>\n    )\n    else render (null)\n  }\n}"]},"metadata":{},"sourceType":"module"}