{"ast":null,"code":"var _jsxFileName = \"/home/beast/Documents/xrchat-client/components/xr/scene/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* global AFRAME, NAF */\nimport React from 'react';\nimport dynamic from 'next/dynamic';\n//Networking\nexport default class SceneRoot extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"state\", {\n      loggedIn: false // TODO: Add auth and vuex store\n\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      id: \"sceneContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    });\n  }\n\n  onComponentDidMount() {\n    console.log(\"component mounted\");\n    const Scene = dynamic(() => {\n      this.state.loggedIn ? import('./scene-networked') : import('./scene-local');\n    }, {\n      ssr: false,\n      loadableGenerated: {\n        webpack: () => [require.resolveWeak('./scene-networked'), require.resolveWeak('./scene-local')],\n        modules: ['./scene-networked', './scene-local']\n      }\n    });\n    console.log(Scene);\n  }\n\n}","map":{"version":3,"sources":["/home/beast/Documents/xrchat-client/components/xr/scene/index.tsx"],"names":["React","dynamic","SceneRoot","Component","constructor","props","loggedIn","render","onComponentDidMount","console","log","Scene","state","ssr"],"mappings":";;;;;AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,cAApB;AAGA;AACA,eAAe,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAwC;AAKrDC,EAAAA,WAAW,CAACC,KAAD,EAAa;AACtB,UAAMA,KAAN;;AADsB,mCAJhB;AACNC,MAAAA,QAAQ,EAAE,KADJ,CACU;;AADV,KAIgB;AAEvB;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,EAAE,EAAC,gBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AAEDC,EAAAA,mBAAmB,GAAE;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,UAAMC,KAAK,GAAGV,OAAO,CAAC,MAAY;AAChC,WAAKW,KAAL,CAAWN,QAAX,GAAsB,OAAO,mBAAP,CAAtB,GAAqD,OAAO,eAAP,CAArD;AACD,KAFoB,EAElB;AACDO,MAAAA,GAAG,EAAE,KADJ;AAAA;AAAA,4CAD4B,mBAC5B,uBAD2D,eAC3D;AAAA,kBAD4B,mBAC5B,EAD2D,eAC3D;AAAA;AAAA,KAFkB,CAArB;AAKAJ,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AAED;;AAxBoD","sourcesContent":["/* global AFRAME, NAF */\n\nimport React from 'react'\nimport dynamic from 'next/dynamic';\nimport ReactDOM from 'react-dom';\n\n//Networking\nexport default class SceneRoot extends React.Component {\n  state = {\n    loggedIn: false // TODO: Add auth and vuex store\n  };\n\n  constructor(props: any) {\n    super(props); \n  }\n\n  render() {\n    return (\n      <div id=\"sceneContainer\" />\n    )\n  }\n\n  onComponentDidMount(){\n    console.log(\"component mounted\")\n    const Scene = dynamic(() : any => {\n      this.state.loggedIn ? import('./scene-networked') :  import('./scene-local')\n    }, {\n      ssr: false\n    }); \n    console.log(Scene)\n\n  }\n}"]},"metadata":{},"sourceType":"module"}