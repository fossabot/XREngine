{"ast":null,"code":"var _jsxFileName = \"/home/beast/Documents/xrchat-client/components/xr/scene/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport dynamic from 'next/dynamic';\nimport ReactDOM from 'react-dom'; //Networking\n\nexport default class SceneRoot extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"state\", {\n      loggedIn: false // TODO: Add auth and redux store\n\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      id: \"sceneContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }\n    });\n  }\n\n  componentDidMount() {\n    console.log(\"component mounted\");\n    const Scene = dynamic(() => {\n      this.state.loggedIn ? import('./scene-networked') : import('./scene-local');\n    }, {\n      ssr: false,\n      loadableGenerated: {\n        webpack: () => [require.resolveWeak('./scene-networked'), require.resolveWeak('./scene-local')],\n        modules: ['./scene-networked', './scene-local']\n      }\n    });\n    ReactDOM.render(__jsx(Scene, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }\n    }), document.querySelector('#sceneContainer'));\n  }\n\n}","map":{"version":3,"sources":["/home/beast/Documents/xrchat-client/components/xr/scene/index.tsx"],"names":["React","dynamic","ReactDOM","SceneRoot","Component","constructor","props","loggedIn","render","componentDidMount","console","log","Scene","state","ssr","document","querySelector"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CAEA;;AACA,eAAe,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAwC;AAKrDC,EAAAA,WAAW,CAACC,KAAD,EAAa;AACtB,UAAMA,KAAN;;AADsB,mCAJhB;AACNC,MAAAA,QAAQ,EAAE,KADJ,CACU;;AADV,KAIgB;AAEvB;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,EAAE,EAAC,gBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,UAAMC,KAAK,GAAGX,OAAO,CAAC,MAAW;AAC/B,WAAKY,KAAL,CAAWN,QAAX,GAAsB,OAAO,mBAAP,CAAtB,GAAoD,OAAO,eAAP,CAApD;AACD,KAFoB,EAElB;AACDO,MAAAA,GAAG,EAAE,KADJ;AAAA;AAAA,4CAD4B,mBAC5B,uBAD0D,eAC1D;AAAA,kBAD4B,mBAC5B,EAD0D,eAC1D;AAAA;AAAA,KAFkB,CAArB;AAKAZ,IAAAA,QAAQ,CAACM,MAAT,CAAgB,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhB,EAA2BO,QAAQ,CAACC,aAAT,CAAuB,iBAAvB,CAA3B;AACD;;AAvBoD","sourcesContent":["import React from 'react'\nimport dynamic from 'next/dynamic'\nimport ReactDOM from 'react-dom'\n\n//Networking\nexport default class SceneRoot extends React.Component {\n  state = {\n    loggedIn: false // TODO: Add auth and redux store\n  };\n\n  constructor(props: any) {\n    super(props)\n  }\n\n  render() {\n    return (\n      <div id=\"sceneContainer\" />\n    )\n  }\n\n  componentDidMount() {\n    console.log(\"component mounted\")\n    const Scene = dynamic((): any => {\n      this.state.loggedIn ? import('./scene-networked') : import('./scene-local')\n    }, {\n      ssr: false\n    })\n    ReactDOM.render(<Scene />, document.querySelector('#sceneContainer'))\n  }\n}"]},"metadata":{},"sourceType":"module"}