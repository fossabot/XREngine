{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport dynamic from 'next/dynamic';\nimport ReactDOM from 'react-dom'; //Networking\n\nexport default class SceneRoot extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"state\", {\n      loggedIn: true // TODO: Add auth and redux store\n\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      id: \"sceneContainer\"\n    });\n  }\n\n  componentDidMount() {\n    console.log(\"component mounted\");\n    const Scene = dynamic(() => {\n      this.state.loggedIn ? import('./scene-networked') : import('./scene-local');\n    }, {\n      ssr: false,\n      loadableGenerated: {\n        webpack: () => [require.resolveWeak('./scene-networked'), require.resolveWeak('./scene-local')],\n        modules: ['./scene-networked', './scene-local']\n      }\n    });\n    ReactDOM.render(__jsx(Scene, null), document.querySelector('#sceneContainer'));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}