{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/beast/Documents/xrchat-client/components/xr/scene/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/* global AFRAME, NAF */\nimport React from 'react';\nimport dynamic from 'next/dynamic';\ndynamic( // @ts-ignore\nfunction () {\n  // @ts-ignore\n  import('webrtc-adapter');\n  import('aframe'); // @ts-ignore\n\n  import('networked-aframe'); // @ts-ignore\n\n  import('naf-janus-adapter/dist/naf-janus-adapter');\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('webrtc-adapter'), require.resolveWeak('aframe'), require.resolveWeak('networked-aframe'), require.resolveWeak('naf-janus-adapter/dist/naf-janus-adapter')];\n    },\n    modules: ['webrtc-adapter', 'aframe', 'networked-aframe', 'naf-janus-adapter/dist/naf-janus-adapter']\n  }\n}); //Networking\n\nvar Scene = /*#__PURE__*/function (_React$Component) {\n  _inherits(Scene, _React$Component);\n\n  var _super = _createSuper(Scene);\n\n  _createClass(Scene, [{\n    key: \"isLoggedIn\",\n    value: function isLoggedIn() {\n      return this.state.loggedIn;\n    }\n  }]);\n\n  function Scene(props) {\n    var _this;\n\n    _classCallCheck(this, Scene);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"NetworkedScene\", dynamic(function () {\n      import('./scene-networked');\n    }, {\n      ssr: false,\n      loadableGenerated: {\n        webpack: function webpack() {\n          return [require.resolveWeak('./scene-networked')];\n        },\n        modules: ['./scene-networked']\n      }\n    }));\n\n    _defineProperty(_assertThisInitialized(_this), \"LocalScene\", dynamic(function () {\n      import('./scene-local');\n    }, {\n      ssr: false,\n      loadableGenerated: {\n        webpack: function webpack() {\n          return [require.resolveWeak('./scene-local')];\n        },\n        modules: ['./scene-local']\n      }\n    }));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      loggedIn: false // TODO: Add auth and vuex store\n\n    });\n\n    return _this;\n  }\n\n  _createClass(Scene, [{\n    key: \"render\",\n    value: function render() {\n      if (this.isLoggedIn()) return __jsx(this.NetworkedScene, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 18\n        }\n      });else return __jsx(this.LocalScene, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 18\n        }\n      });\n    }\n  }]);\n\n  return Scene;\n}(React.Component);\n\nexport { Scene as default };","map":{"version":3,"sources":["/home/beast/Documents/xrchat-client/components/xr/scene/index.tsx"],"names":["React","dynamic","ssr","Scene","state","loggedIn","props","isLoggedIn","Component"],"mappings":";;;;;;;;;;;;;;AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,cAApB;AAEAA,OAAO,EACH;AACF,YAAM;AACA;AAEJ,SAAO,gBAAP;AACA,SAAO,QAAP,EAJI,CAKJ;;AACA,SAAO,kBAAP,EANI,CAOA;;AACJ,SAAO,0CAAP;AACD,CAXI,EAYL;AAAEC,EAAAA,GAAG,EAAE,KAAP;AAAA;AAAA;AAAA,kCAPS,gBAOT,uBANS,QAMT,uBAJS,kBAIT,uBAFS,0CAET;AAAA;AAAA,cAPS,gBAOT,EANS,QAMT,EAJS,kBAIT,EAFS,0CAET;AAAA;AAAA,CAZK,CAAP,C,CAgBA;;IACqBC,K;;;;;;;iCAmBN;AACX,aAAO,KAAKC,KAAL,CAAWC,QAAlB;AACD;;;AAED,iBAAYC,KAAZ,EAAwB;AAAA;;AAAA;;AACtB,8BAAMA,KAAN;;AADsB,qEAtBPL,OAAO,CAAC,YAAY;AACnC,aAAO,mBAAP;AACD,KAFuB,EAGtB;AACAC,MAAAA,GAAG,EAAE,KADL;AAAA;AAAA;AAAA,sCAFO,mBAEP;AAAA;AAAA,kBAFO,mBAEP;AAAA;AAAA,KAHsB,CAsBA;;AAAA,iEAfXD,OAAO,CAAC,YAAY;AAC/B,aAAO,eAAP;AACD,KAFmB,EAGlB;AACAC,MAAAA,GAAG,EAAE,KADL;AAAA;AAAA;AAAA,sCAFO,eAEP;AAAA;AAAA,kBAFO,eAEP;AAAA;AAAA,KAHkB,CAeI;;AAAA,4DARhB;AACNG,MAAAA,QAAQ,EAAE,KADJ,CACU;;AADV,KAQgB;;AAAA;AAGvB;;;;6BACQ;AACL,UAAG,KAAKE,UAAL,EAAH,EACE,OAAS,WAAM,cAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAT,CADF,KAGE,OAAS,WAAM,UAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAT;AACL;;;;EAhCgCP,KAAK,CAACQ,S;;SAApBL,K","sourcesContent":["/* global AFRAME, NAF */\n\nimport React from 'react'\nimport dynamic from 'next/dynamic';\n\ndynamic(\n    // @ts-ignore\n  () => {\n        // @ts-ignore\n\n    import('webrtc-adapter')\n    import('aframe')\n    // @ts-ignore\n    import('networked-aframe')\n        // @ts-ignore\n    import('naf-janus-adapter/dist/naf-janus-adapter')\n  },\n  { ssr: false }\n)\n\n\n//Networking\nexport default class Scene extends React.Component {\n  NetworkedScene = dynamic(() : any => {\n    import('./scene-networked')\n  }\n  , {\n    ssr: false\n  });\n  \n  LocalScene = dynamic(() : any => {\n    import('./scene-local')\n  }\n  , {\n    ssr: false\n  });\n  \n  state = {\n    loggedIn: false // TODO: Add auth and vuex store\n  };\n\n  isLoggedIn() {\n    return this.state.loggedIn\n  }\n\n  constructor(props: any) {\n    super(props);\n    \n  }\n  render() {\n      if(this.isLoggedIn()) \n        return ( <this.NetworkedScene /> )\n      else\n        return ( <this.LocalScene /> )\n  }\n}"]},"metadata":{},"sourceType":"module"}