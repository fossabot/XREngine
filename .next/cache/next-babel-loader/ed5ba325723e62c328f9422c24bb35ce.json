{"ast":null,"code":"var _jsxFileName = \"/home/beast/Documents/xrchat-client/components/xr/scene/scene-local.tsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport 'aframe';\nimport 'aframe-particle-system-component';\nimport 'babel-polyfill'; //@ts-ignore\n\nimport { Entity, Scene } from 'aframe-react';\nimport ReactDOM from 'react-dom';\nexport default class LocalScene extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"state\", {\n      color: ''\n    });\n\n    this.state = {\n      color: 'red'\n    };\n  }\n\n  changeColor() {\n    const colors = ['red', 'orange', 'yellow', 'green', 'blue'];\n    this.setState({\n      color: colors[Math.floor(Math.random() * colors.length)]\n    });\n  }\n\n  render() {\n    return __jsx(Scene, {\n      renderer: \"antialias: true\",\n      environment: {\n        preset: 'starry',\n        seed: 2,\n        lightPosition: {\n          x: 0.0,\n          y: 0.03,\n          z: -0.5\n        },\n        fog: 0.8,\n        ground: 'canyon',\n        groundYScale: 6.31,\n        groundTexture: 'walkernoise',\n        groundColor: '#8a7f8a',\n        grid: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, __jsx(\"a-assets\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 16\n      }\n    }, __jsx(\"img\", {\n      id: \"groundTexture\",\n      src: \"https://cdn.aframe.io/a-painter/images/floor.jpg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }), __jsx(\"img\", {\n      id: \"skyTexture\",\n      src: \"https://cdn.aframe.io/a-painter/images/sky.jpg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    })), __jsx(Entity, {\n      primitive: \"a-plane\",\n      src: \"#groundTexture\",\n      rotation: \"-90 0 0\",\n      height: \"100\",\n      width: \"100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }), __jsx(Entity, {\n      primitive: \"a-light\",\n      type: \"ambient\",\n      color: \"#445451\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }), __jsx(Entity, {\n      primitive: \"a-light\",\n      type: \"point\",\n      intensity: \"2\",\n      position: \"2 4 4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }), __jsx(Entity, {\n      primitive: \"a-sky\",\n      height: \"2048\",\n      radius: \"30\",\n      src: \"#skyTexture\",\n      \"theta-length\": \"90\",\n      width: \"2048\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }), __jsx(Entity, {\n      \"particle-system\": {\n        preset: 'snow',\n        particleCount: 2000\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }), __jsx(Entity, {\n      text: {\n        value: 'Hello, A-Frame React!',\n        align: 'center'\n      },\n      position: {\n        x: 0,\n        y: 2,\n        z: -1\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }), __jsx(Entity, {\n      id: \"box\",\n      geometry: {\n        primitive: 'box'\n      },\n      material: {\n        color: this.state.color,\n        opacity: 0.6\n      },\n      animation__rotate: {\n        property: 'rotation',\n        dur: 2000,\n        loop: true,\n        to: '360 360 360'\n      },\n      animation__scale: {\n        property: 'scale',\n        dir: 'alternate',\n        dur: 100,\n        loop: true,\n        to: '1.1 1.1 1.1'\n      },\n      position: {\n        x: 0,\n        y: 1,\n        z: -3\n      },\n      events: {\n        click: this.changeColor.bind(this)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, __jsx(Entity, {\n      animation__scale: {\n        property: 'scale',\n        dir: 'alternate',\n        dur: 100,\n        loop: true,\n        to: '2 2 2'\n      },\n      geometry: {\n        primitive: 'box',\n        depth: 0.2,\n        height: 0.2,\n        width: 0.2\n      },\n      material: {\n        color: '#24CAFF'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    })), __jsx(Entity, {\n      primitive: \"a-camera\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, __jsx(Entity, {\n      primitive: \"a-cursor\",\n      animation__click: {\n        property: 'scale',\n        startEvents: 'click',\n        from: '0.1 0.1 0.1',\n        to: '1 1 1',\n        dur: 150\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\nReactDOM.render(__jsx(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 17\n  }\n}), document.querySelector('#sceneContainer'));","map":{"version":3,"sources":["/home/beast/Documents/xrchat-client/components/xr/scene/scene-local.tsx"],"names":["React","Entity","Scene","ReactDOM","LocalScene","Component","constructor","props","color","state","changeColor","colors","setState","Math","floor","random","length","render","preset","seed","lightPosition","x","y","z","fog","ground","groundYScale","groundTexture","groundColor","grid","particleCount","value","align","primitive","opacity","property","dur","loop","to","dir","click","bind","depth","height","width","startEvents","from","document","querySelector"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport 'aframe';\nimport 'aframe-particle-system-component';\nimport 'babel-polyfill';\n//@ts-ignore\nimport {Entity, Scene} from 'aframe-react';\nimport ReactDOM from 'react-dom';\n\nexport default class LocalScene extends React.Component {\n\nstate = {\n    color :''\n}\n\n    constructor(props : any) {\n        super(props);\n        this.state = {color: 'red'};\n      }\n    \n      changeColor() {\n        const colors = ['red', 'orange', 'yellow', 'green', 'blue'];\n        this.setState({\n          color: colors[Math.floor(Math.random() * colors.length)]\n        });\n      }\n\n    render() {\n        return (                \n        <Scene renderer=\"antialias: true\"\n        environment={{\n            preset: 'starry',\n            seed: 2,\n            lightPosition: { x: 0.0, y: 0.03, z: -0.5 },\n            fog: 0.8,\n            ground: 'canyon',\n            groundYScale: 6.31,\n            groundTexture: 'walkernoise',\n            groundColor: '#8a7f8a',\n            grid: 'none'\n          }}>\n               <a-assets>\n          <img id=\"groundTexture\" src=\"https://cdn.aframe.io/a-painter/images/floor.jpg\"/>\n          <img id=\"skyTexture\" src=\"https://cdn.aframe.io/a-painter/images/sky.jpg\"/>\n        </a-assets>\n\n        <Entity primitive=\"a-plane\" src=\"#groundTexture\" rotation=\"-90 0 0\" height=\"100\" width=\"100\"/>\n        <Entity primitive=\"a-light\" type=\"ambient\" color=\"#445451\"/>\n        <Entity primitive=\"a-light\" type=\"point\" intensity=\"2\" position=\"2 4 4\"/>\n        <Entity primitive=\"a-sky\" height=\"2048\" radius=\"30\" src=\"#skyTexture\" theta-length=\"90\" width=\"2048\"/>\n        <Entity particle-system={{preset: 'snow', particleCount: 2000}}/>\n        <Entity text={{value: 'Hello, A-Frame React!', align: 'center'}} position={{x: 0, y: 2, z: -1}}/>\n\n        <Entity id=\"box\"\n          geometry={{primitive: 'box'}}\n          material={{color: this.state.color, opacity: 0.6}}\n          animation__rotate={{property: 'rotation', dur: 2000, loop: true, to: '360 360 360'}}\n          animation__scale={{property: 'scale', dir: 'alternate', dur: 100, loop: true, to: '1.1 1.1 1.1'}}\n          position={{x: 0, y: 1, z: -3}}\n          events={{click: this.changeColor.bind(this)}}>\n          <Entity animation__scale={{property: 'scale', dir: 'alternate', dur: 100, loop: true, to: '2 2 2'}}\n                  geometry={{primitive: 'box', depth: 0.2, height: 0.2, width: 0.2}}\n                  material={{color: '#24CAFF'}}/>\n        </Entity>\n\n        <Entity primitive=\"a-camera\">\n          <Entity primitive=\"a-cursor\" animation__click={{property: 'scale', startEvents: 'click', from: '0.1 0.1 0.1', to: '1 1 1', dur: 150}}/>\n        </Entity>\n              \n                </Scene>\n        )\n    }\n}\n\nReactDOM.render(<App/>, document.querySelector('#sceneContainer'));\n"]},"metadata":{},"sourceType":"module"}