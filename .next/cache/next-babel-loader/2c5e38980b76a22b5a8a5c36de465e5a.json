{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/beast/Documents/xrchat-client/components/xr/scene/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport dynamic from 'next/dynamic';\nimport ReactDOM from 'react-dom';\nimport NetworkedScene from './scene-networked';\nimport LocalScene from './scene-local'; //Networking\n\nvar SceneRoot = /*#__PURE__*/function (_React$Component) {\n  _inherits(SceneRoot, _React$Component);\n\n  var _super = _createSuper(SceneRoot);\n\n  function SceneRoot(props) {\n    var _this;\n\n    _classCallCheck(this, SceneRoot);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      loggedIn: true // TODO: Add auth and redux store\n\n    });\n\n    return _this;\n  }\n\n  _createClass(SceneRoot, [{\n    key: \"render\",\n    value: function render() {\n      if (this.state.loggedIn) return __jsx(NetworkedScene, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 7\n        }\n      });else return __jsx(LocalScene, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 7\n        }\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(\"component mounted\");\n      var Scene = dynamic(function () {}, {\n        ssr: false\n      });\n      ReactDOM.render(__jsx(Scene, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }\n      }), document.querySelector('#sceneContainer'));\n    }\n  }]);\n\n  return SceneRoot;\n}(React.Component);\n\nexport { SceneRoot as default };","map":{"version":3,"sources":["/home/beast/Documents/xrchat-client/components/xr/scene/index.tsx"],"names":["React","dynamic","ReactDOM","NetworkedScene","LocalScene","SceneRoot","props","loggedIn","state","console","log","Scene","ssr","render","document","querySelector","Component"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,UAAP,MAAuB,eAAvB,C,CAEA;;IACqBC,S;;;;;AAKnB,qBAAYC,KAAZ,EAAwB;AAAA;;AAAA;;AACtB,8BAAMA,KAAN;;AADsB,4DAJhB;AACNC,MAAAA,QAAQ,EAAE,IADJ,CACS;;AADT,KAIgB;;AAAA;AAEvB;;;;6BAEQ;AACP,UAAG,KAAKC,KAAL,CAAWD,QAAd,EACA,OACE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADA,KAIK,OACH,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADG;AAGN;;;wCAEmB;AAClBE,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,UAAMC,KAAK,GAAGV,OAAO,CAAC,YAAW,CAEhC,CAFoB,EAElB;AACDW,QAAAA,GAAG,EAAE;AADJ,OAFkB,CAArB;AAKAV,MAAAA,QAAQ,CAACW,MAAT,CAAgB,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhB,EAA2BC,QAAQ,CAACC,aAAT,CAAuB,iBAAvB,CAA3B;AACD;;;;EA3BoCf,KAAK,CAACgB,S;;SAAxBX,S","sourcesContent":["import React from 'react'\nimport dynamic from 'next/dynamic'\nimport ReactDOM from 'react-dom'\nimport NetworkedScene from './scene-networked'\nimport LocalScene from './scene-local'\n\n//Networking\nexport default class SceneRoot extends React.Component {\n  state = {\n    loggedIn: true // TODO: Add auth and redux store\n  };\n\n  constructor(props: any) {\n    super(props)\n  }\n\n  render() {\n    if(this.state.loggedIn)\n    return (\n      <NetworkedScene />\n    )\n    else return (\n      <LocalScene /> \n    )\n  }\n\n  componentDidMount() {\n    console.log(\"component mounted\")\n    const Scene = dynamic((): any => {\n      \n    }, {\n      ssr: false\n    })\n    ReactDOM.render(<Scene />, document.querySelector('#sceneContainer'))\n  }\n}"]},"metadata":{},"sourceType":"module"}