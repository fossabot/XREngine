{"ast":null,"code":"var _jsxFileName = \"/home/beast/Documents/xrchat-client/components/xr/scene/scene-local.tsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* global AFRAME, NAF */\nimport React from 'react';\nimport 'aframe';\nimport 'aframe-particle-system-component'; // TODO : Add types for aframe-react\n//@ts-ignore\n\nimport { Entity, Scene } from 'aframe-react';\nexport default class LocalScene extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"state\", {\n      color: ''\n    });\n\n    this.state = {\n      color: 'red'\n    };\n  }\n\n  changeColor() {\n    const colors = ['red', 'orange', 'yellow', 'green', 'blue'];\n    this.setState({\n      color: colors[Math.floor(Math.random() * colors.length)]\n    });\n  }\n\n  render() {\n    return __jsx(Scene, {\n      renderer: \"antialias: true\",\n      environment: {\n        preset: 'starry',\n        seed: 2,\n        lightPosition: {\n          x: 0.0,\n          y: 0.03,\n          z: -0.5\n        },\n        fog: 0.8,\n        ground: 'canyon',\n        groundYScale: 6.31,\n        groundTexture: 'walkernoise',\n        groundColor: '#8a7f8a',\n        grid: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, __jsx(\"a-assets\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, __jsx(\"img\", {\n      id: \"groundTexture\",\n      src: \"https://cdn.aframe.io/a-painter/images/floor.jpg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    })), __jsx(Entity, {\n      primitive: \"a-plane\",\n      src: \"#groundTexture\",\n      rotation: \"-90 0 0\",\n      height: \"100\",\n      width: \"100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }), __jsx(Entity, {\n      id: \"box\",\n      geometry: {\n        primitive: 'box'\n      },\n      material: {\n        color: this.state.color,\n        opacity: 0.6\n      },\n      animation__rotate: {\n        property: 'rotation',\n        dur: 2000,\n        loop: true,\n        to: '360 360 360'\n      },\n      animation__scale: {\n        property: 'scale',\n        dir: 'alternate',\n        dur: 100,\n        loop: true,\n        to: '1.1 1.1 1.1'\n      },\n      position: {\n        x: 0,\n        y: 1,\n        z: -3\n      },\n      events: {\n        click: this.changeColor.bind(this)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, __jsx(Entity, {\n      animation__scale: {\n        property: 'scale',\n        dir: 'alternate',\n        dur: 100,\n        loop: true,\n        to: '2 2 2'\n      },\n      geometry: {\n        primitive: 'box',\n        depth: 0.2,\n        height: 0.2,\n        width: 0.2\n      },\n      material: {\n        color: '#24CAFF'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    })), __jsx(Entity, {\n      primitive: \"a-camera\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, __jsx(Entity, {\n      primitive: \"a-cursor\",\n      animation__click: {\n        property: 'scale',\n        startEvents: 'click',\n        from: '0.1 0.1 0.1',\n        to: '1 1 1',\n        dur: 150\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/home/beast/Documents/xrchat-client/components/xr/scene/scene-local.tsx"],"names":["React","Entity","Scene","LocalScene","Component","constructor","props","color","state","changeColor","colors","setState","Math","floor","random","length","render","preset","seed","lightPosition","x","y","z","fog","ground","groundYScale","groundTexture","groundColor","grid","primitive","opacity","property","dur","loop","to","dir","click","bind","depth","height","width","startEvents","from"],"mappings":"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","sourcesContent":["/* global AFRAME, NAF */\n\nimport React from 'react'\nimport 'aframe'\nimport 'aframe-particle-system-component'\n// TODO : Add types for aframe-react\n//@ts-ignore\nimport { Entity, Scene } from 'aframe-react'\n\nexport default class LocalScene extends React.Component {\n\n    state = {\n        color: ''\n    }\n\n    constructor(props: any) {\n        super(props);\n        this.state = { color: 'red' };\n    }\n\n    changeColor() {\n        const colors = ['red', 'orange', 'yellow', 'green', 'blue'];\n        this.setState({\n            color: colors[Math.floor(Math.random() * colors.length)]\n        });\n    }\n\n    render() {\n        return (\n            <Scene renderer=\"antialias: true\"\n                environment={{\n                    preset: 'starry',\n                    seed: 2,\n                    lightPosition: { x: 0.0, y: 0.03, z: -0.5 },\n                    fog: 0.8,\n                    ground: 'canyon',\n                    groundYScale: 6.31,\n                    groundTexture: 'walkernoise',\n                    groundColor: '#8a7f8a',\n                    grid: 'none'\n                }}>\n                <a-assets>\n                    <img id=\"groundTexture\" src=\"https://cdn.aframe.io/a-painter/images/floor.jpg\" />\n                </a-assets>\n                <Entity primitive=\"a-plane\" src=\"#groundTexture\" rotation=\"-90 0 0\" height=\"100\" width=\"100\" />\n\n                <Entity id=\"box\"\n                    geometry={{ primitive: 'box' }}\n                    material={{ color: this.state.color, opacity: 0.6 }}\n                    animation__rotate={{ property: 'rotation', dur: 2000, loop: true, to: '360 360 360' }}\n                    animation__scale={{ property: 'scale', dir: 'alternate', dur: 100, loop: true, to: '1.1 1.1 1.1' }}\n                    position={{ x: 0, y: 1, z: -3 }}\n                    events={{ click: this.changeColor.bind(this) }}>\n                    <Entity animation__scale={{ property: 'scale', dir: 'alternate', dur: 100, loop: true, to: '2 2 2' }}\n                        geometry={{ primitive: 'box', depth: 0.2, height: 0.2, width: 0.2 }}\n                        material={{ color: '#24CAFF' }} />\n                </Entity>\n\n                <Entity primitive=\"a-camera\">\n                    <Entity primitive=\"a-cursor\" animation__click={{ property: 'scale', startEvents: 'click', from: '0.1 0.1 0.1', to: '1 1 1', dur: 150 }} />\n                </Entity>\n\n            </Scene>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}