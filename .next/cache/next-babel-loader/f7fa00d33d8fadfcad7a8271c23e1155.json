{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/beast/Documents/xrchat-client/components/xr/scene/scene-local.tsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport 'aframe';\nimport 'aframe-particle-system-component';\nimport 'babel-polyfill'; //@ts-ignore\n\nimport { Entity, Scene } from 'aframe-react';\nimport ReactDOM from 'react-dom';\n\nvar LocalScene = /*#__PURE__*/function (_React$Component) {\n  _inherits(LocalScene, _React$Component);\n\n  var _super = _createSuper(LocalScene);\n\n  function LocalScene(props) {\n    var _this;\n\n    _classCallCheck(this, LocalScene);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      color: ''\n    });\n\n    _this.state = {\n      color: 'red'\n    };\n    return _this;\n  }\n\n  _createClass(LocalScene, [{\n    key: \"changeColor\",\n    value: function changeColor() {\n      var colors = ['red', 'orange', 'yellow', 'green', 'blue'];\n      this.setState({\n        color: colors[Math.floor(Math.random() * colors.length)]\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Scene, {\n        renderer: \"antialias: true\",\n        environment: {\n          preset: 'starry',\n          seed: 2,\n          lightPosition: {\n            x: 0.0,\n            y: 0.03,\n            z: -0.5\n          },\n          fog: 0.8,\n          ground: 'canyon',\n          groundYScale: 6.31,\n          groundTexture: 'walkernoise',\n          groundColor: '#8a7f8a',\n          grid: 'none'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }\n      }, __jsx(\"a-assets\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 16\n        }\n      }, __jsx(\"img\", {\n        id: \"groundTexture\",\n        src: \"https://cdn.aframe.io/a-painter/images/floor.jpg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }\n      }), __jsx(\"img\", {\n        id: \"skyTexture\",\n        src: \"https://cdn.aframe.io/a-painter/images/sky.jpg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }\n      })), __jsx(Entity, {\n        primitive: \"a-plane\",\n        src: \"#groundTexture\",\n        rotation: \"-90 0 0\",\n        height: \"100\",\n        width: \"100\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }), __jsx(Entity, {\n        primitive: \"a-light\",\n        type: \"ambient\",\n        color: \"#445451\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }\n      }), __jsx(Entity, {\n        primitive: \"a-light\",\n        type: \"point\",\n        intensity: \"2\",\n        position: \"2 4 4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }\n      }), __jsx(Entity, {\n        primitive: \"a-sky\",\n        height: \"2048\",\n        radius: \"30\",\n        src: \"#skyTexture\",\n        \"theta-length\": \"90\",\n        width: \"2048\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }\n      }), __jsx(Entity, {\n        \"particle-system\": {\n          preset: 'snow',\n          particleCount: 2000\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }\n      }), __jsx(Entity, {\n        text: {\n          value: 'Hello, A-Frame React!',\n          align: 'center'\n        },\n        position: {\n          x: 0,\n          y: 2,\n          z: -1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }\n      }), __jsx(Entity, {\n        id: \"box\",\n        geometry: {\n          primitive: 'box'\n        },\n        material: {\n          color: this.state.color,\n          opacity: 0.6\n        },\n        animation__rotate: {\n          property: 'rotation',\n          dur: 2000,\n          loop: true,\n          to: '360 360 360'\n        },\n        animation__scale: {\n          property: 'scale',\n          dir: 'alternate',\n          dur: 100,\n          loop: true,\n          to: '1.1 1.1 1.1'\n        },\n        position: {\n          x: 0,\n          y: 1,\n          z: -3\n        },\n        events: {\n          click: this.changeColor.bind(this)\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }\n      }, __jsx(Entity, {\n        animation__scale: {\n          property: 'scale',\n          dir: 'alternate',\n          dur: 100,\n          loop: true,\n          to: '2 2 2'\n        },\n        geometry: {\n          primitive: 'box',\n          depth: 0.2,\n          height: 0.2,\n          width: 0.2\n        },\n        material: {\n          color: '#24CAFF'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }\n      })), __jsx(Entity, {\n        primitive: \"a-camera\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }\n      }, __jsx(Entity, {\n        primitive: \"a-cursor\",\n        animation__click: {\n          property: 'scale',\n          startEvents: 'click',\n          from: '0.1 0.1 0.1',\n          to: '1 1 1',\n          dur: 150\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return LocalScene;\n}(React.Component);\n\nexport { LocalScene as default };\nReactDOM.render(__jsx(LlScene, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 17\n  }\n}), document.querySelector('#sceneContainer'));","map":{"version":3,"sources":["/home/beast/Documents/xrchat-client/components/xr/scene/scene-local.tsx"],"names":["React","Entity","Scene","ReactDOM","LocalScene","props","color","state","colors","setState","Math","floor","random","length","preset","seed","lightPosition","x","y","z","fog","ground","groundYScale","groundTexture","groundColor","grid","particleCount","value","align","primitive","opacity","property","dur","loop","to","dir","click","changeColor","bind","depth","height","width","startEvents","from","Component","render","document","querySelector"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport 'aframe';\nimport 'aframe-particle-system-component';\nimport 'babel-polyfill';\n//@ts-ignore\nimport {Entity, Scene} from 'aframe-react';\nimport ReactDOM from 'react-dom';\n\nexport default class LocalScene extends React.Component {\n\nstate = {\n    color :''\n}\n\n    constructor(props : any) {\n        super(props);\n        this.state = {color: 'red'};\n      }\n    \n      changeColor() {\n        const colors = ['red', 'orange', 'yellow', 'green', 'blue'];\n        this.setState({\n          color: colors[Math.floor(Math.random() * colors.length)]\n        });\n      }\n\n    render() {\n        return (                \n        <Scene renderer=\"antialias: true\"\n        environment={{\n            preset: 'starry',\n            seed: 2,\n            lightPosition: { x: 0.0, y: 0.03, z: -0.5 },\n            fog: 0.8,\n            ground: 'canyon',\n            groundYScale: 6.31,\n            groundTexture: 'walkernoise',\n            groundColor: '#8a7f8a',\n            grid: 'none'\n          }}>\n               <a-assets>\n          <img id=\"groundTexture\" src=\"https://cdn.aframe.io/a-painter/images/floor.jpg\"/>\n          <img id=\"skyTexture\" src=\"https://cdn.aframe.io/a-painter/images/sky.jpg\"/>\n        </a-assets>\n\n        <Entity primitive=\"a-plane\" src=\"#groundTexture\" rotation=\"-90 0 0\" height=\"100\" width=\"100\"/>\n        <Entity primitive=\"a-light\" type=\"ambient\" color=\"#445451\"/>\n        <Entity primitive=\"a-light\" type=\"point\" intensity=\"2\" position=\"2 4 4\"/>\n        <Entity primitive=\"a-sky\" height=\"2048\" radius=\"30\" src=\"#skyTexture\" theta-length=\"90\" width=\"2048\"/>\n        <Entity particle-system={{preset: 'snow', particleCount: 2000}}/>\n        <Entity text={{value: 'Hello, A-Frame React!', align: 'center'}} position={{x: 0, y: 2, z: -1}}/>\n\n        <Entity id=\"box\"\n          geometry={{primitive: 'box'}}\n          material={{color: this.state.color, opacity: 0.6}}\n          animation__rotate={{property: 'rotation', dur: 2000, loop: true, to: '360 360 360'}}\n          animation__scale={{property: 'scale', dir: 'alternate', dur: 100, loop: true, to: '1.1 1.1 1.1'}}\n          position={{x: 0, y: 1, z: -3}}\n          events={{click: this.changeColor.bind(this)}}>\n          <Entity animation__scale={{property: 'scale', dir: 'alternate', dur: 100, loop: true, to: '2 2 2'}}\n                  geometry={{primitive: 'box', depth: 0.2, height: 0.2, width: 0.2}}\n                  material={{color: '#24CAFF'}}/>\n        </Entity>\n\n        <Entity primitive=\"a-camera\">\n          <Entity primitive=\"a-cursor\" animation__click={{property: 'scale', startEvents: 'click', from: '0.1 0.1 0.1', to: '1 1 1', dur: 150}}/>\n        </Entity>\n              \n                </Scene>\n        )\n    }\n}\n\nReactDOM.render(<LlScene/>, document.querySelector('#sceneContainer'));\n"]},"metadata":{},"sourceType":"module"}