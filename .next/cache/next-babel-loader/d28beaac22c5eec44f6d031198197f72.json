{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/beast/Documents/xrchat-client/components/xr/scene/scene-local.tsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport 'aframe';\nimport 'aframe-particle-system-component';\nimport 'babel-polyfill'; // TODO : Add types for aframe-react\n//@ts-ignore\n\nimport { Entity, Scene } from 'aframe-react';\n\nvar LocalScene = /*#__PURE__*/function (_React$Component) {\n  _inherits(LocalScene, _React$Component);\n\n  var _super = _createSuper(LocalScene);\n\n  function LocalScene(props) {\n    var _this;\n\n    _classCallCheck(this, LocalScene);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      color: ''\n    });\n\n    _this.state = {\n      color: 'red'\n    };\n    return _this;\n  }\n\n  _createClass(LocalScene, [{\n    key: \"changeColor\",\n    value: function changeColor() {\n      var colors = ['red', 'orange', 'yellow', 'green', 'blue'];\n      this.setState({\n        color: colors[Math.floor(Math.random() * colors.length)]\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Scene, {\n        renderer: \"antialias: true\",\n        environment: {\n          preset: 'starry',\n          seed: 2,\n          lightPosition: {\n            x: 0.0,\n            y: 0.03,\n            z: -0.5\n          },\n          fog: 0.8,\n          ground: 'canyon',\n          groundYScale: 6.31,\n          groundTexture: 'walkernoise',\n          groundColor: '#8a7f8a',\n          grid: 'none'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }\n      }, __jsx(\"a-assets\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }\n      }, __jsx(\"img\", {\n        id: \"groundTexture\",\n        src: \"https://cdn.aframe.io/a-painter/images/floor.jpg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }\n      })), __jsx(Entity, {\n        primitive: \"a-plane\",\n        src: \"#groundTexture\",\n        rotation: \"-90 0 0\",\n        height: \"100\",\n        width: \"100\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }\n      }), __jsx(Entity, {\n        id: \"box\",\n        geometry: {\n          primitive: 'box'\n        },\n        material: {\n          color: this.state.color,\n          opacity: 0.6\n        },\n        animation__rotate: {\n          property: 'rotation',\n          dur: 2000,\n          loop: true,\n          to: '360 360 360'\n        },\n        animation__scale: {\n          property: 'scale',\n          dir: 'alternate',\n          dur: 100,\n          loop: true,\n          to: '1.1 1.1 1.1'\n        },\n        position: {\n          x: 0,\n          y: 1,\n          z: -3\n        },\n        events: {\n          click: this.changeColor.bind(this)\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      }, __jsx(Entity, {\n        animation__scale: {\n          property: 'scale',\n          dir: 'alternate',\n          dur: 100,\n          loop: true,\n          to: '2 2 2'\n        },\n        geometry: {\n          primitive: 'box',\n          depth: 0.2,\n          height: 0.2,\n          width: 0.2\n        },\n        material: {\n          color: '#24CAFF'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }\n      })), __jsx(Entity, {\n        primitive: \"a-camera\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }\n      }, __jsx(Entity, {\n        primitive: \"a-cursor\",\n        animation__click: {\n          property: 'scale',\n          startEvents: 'click',\n          from: '0.1 0.1 0.1',\n          to: '1 1 1',\n          dur: 150\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return LocalScene;\n}(React.Component);\n\nexport { LocalScene as default };","map":{"version":3,"sources":["/home/beast/Documents/xrchat-client/components/xr/scene/scene-local.tsx"],"names":["React","Entity","Scene","LocalScene","props","color","state","colors","setState","Math","floor","random","length","preset","seed","lightPosition","x","y","z","fog","ground","groundYScale","groundTexture","groundColor","grid","primitive","opacity","property","dur","loop","to","dir","click","changeColor","bind","depth","height","width","startEvents","from","Component"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport 'aframe'\nimport 'aframe-particle-system-component'\nimport 'babel-polyfill'\n// TODO : Add types for aframe-react\n//@ts-ignore\nimport { Entity, Scene } from 'aframe-react'\n\nexport default class LocalScene extends React.Component {\n\n    state = {\n        color: ''\n    }\n\n    constructor(props: any) {\n        super(props);\n        this.state = { color: 'red' };\n    }\n\n    changeColor() {\n        const colors = ['red', 'orange', 'yellow', 'green', 'blue'];\n        this.setState({\n            color: colors[Math.floor(Math.random() * colors.length)]\n        });\n    }\n\n    render() {\n        return (\n            <Scene renderer=\"antialias: true\"\n                environment={{\n                    preset: 'starry',\n                    seed: 2,\n                    lightPosition: { x: 0.0, y: 0.03, z: -0.5 },\n                    fog: 0.8,\n                    ground: 'canyon',\n                    groundYScale: 6.31,\n                    groundTexture: 'walkernoise',\n                    groundColor: '#8a7f8a',\n                    grid: 'none'\n                }}>\n                <a-assets>\n                    <img id=\"groundTexture\" src=\"https://cdn.aframe.io/a-painter/images/floor.jpg\" />\n                </a-assets>\n                <Entity primitive=\"a-plane\" src=\"#groundTexture\" rotation=\"-90 0 0\" height=\"100\" width=\"100\" />\n\n                <Entity id=\"box\"\n                    geometry={{ primitive: 'box' }}\n                    material={{ color: this.state.color, opacity: 0.6 }}\n                    animation__rotate={{ property: 'rotation', dur: 2000, loop: true, to: '360 360 360' }}\n                    animation__scale={{ property: 'scale', dir: 'alternate', dur: 100, loop: true, to: '1.1 1.1 1.1' }}\n                    position={{ x: 0, y: 1, z: -3 }}\n                    events={{ click: this.changeColor.bind(this) }}>\n                    <Entity animation__scale={{ property: 'scale', dir: 'alternate', dur: 100, loop: true, to: '2 2 2' }}\n                        geometry={{ primitive: 'box', depth: 0.2, height: 0.2, width: 0.2 }}\n                        material={{ color: '#24CAFF' }} />\n                </Entity>\n\n                <Entity primitive=\"a-camera\">\n                    <Entity primitive=\"a-cursor\" animation__click={{ property: 'scale', startEvents: 'click', from: '0.1 0.1 0.1', to: '1 1 1', dur: 150 }} />\n                </Entity>\n\n            </Scene>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}