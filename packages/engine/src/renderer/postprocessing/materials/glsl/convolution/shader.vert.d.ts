declare const _default: "uniform vec2 texelSize;\nuniform vec2 halfTexelSize;\nuniform float kernel;\nuniform float scale;\n\n/* Packing multiple texture coordinates into one varying and using a swizzle to\nextract them in the fragment shader still causes a dependent texture read. */\nvarying vec2 vUv0;\nvarying vec2 vUv1;\nvarying vec2 vUv2;\nvarying vec2 vUv3;\n\nvoid main() {\n\n\tvec2 uv = position.xy * 0.5 + 0.5;\n\tvec2 dUv = (texelSize * vec2(kernel) + halfTexelSize) * scale;\n\n\tvUv0 = vec2(uv.x - dUv.x, uv.y + dUv.y);\n\tvUv1 = vec2(uv.x + dUv.x, uv.y + dUv.y);\n\tvUv2 = vec2(uv.x + dUv.x, uv.y - dUv.y);\n\tvUv3 = vec2(uv.x - dUv.x, uv.y - dUv.y);\n\n\tgl_Position = vec4(position.xy, 1.0, 1.0);\n\n}\n";
export default _default;
