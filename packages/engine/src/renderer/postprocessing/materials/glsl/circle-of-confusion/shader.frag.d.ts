declare const _default: "#include <common>\n#include <packing>\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n\n\tuniform highp sampler2D depthBuffer;\n\n#else\n\n\tuniform mediump sampler2D depthBuffer;\n\n#endif\n\nuniform float focusDistance;\nuniform float focalLength;\nuniform float cameraNear;\nuniform float cameraFar;\n\nvarying vec2 vUv;\n\nfloat readDepth(const in vec2 uv) {\n\n\t#if DEPTH_PACKING == 3201\n\n\t\treturn unpackRGBAToDepth(texture2D(depthBuffer, uv));\n\n\t#else\n\n\t\treturn texture2D(depthBuffer, uv).r;\n\n\t#endif\n\n}\n\nvoid main() {\n\n\tfloat depth = readDepth(vUv);\n\n\t#ifdef PERSPECTIVE_CAMERA\n\n\t\tfloat viewZ = perspectiveDepthToViewZ(depth, cameraNear, cameraFar);\n\t\tfloat linearDepth = viewZToOrthographicDepth(viewZ, cameraNear, cameraFar);\n\n\t#else\n\n\t\tfloat linearDepth = depth;\n\n\t#endif\n\n\tfloat signedDistance = linearDepth - focusDistance;\n\tfloat magnitude = smoothstep(0.0, focalLength, abs(signedDistance));\n\n\tgl_FragColor.rg = vec2(\n\t\tstep(signedDistance, 0.0) * magnitude,\n\t\tstep(0.0, signedDistance) * magnitude\n\t);\n\n}\n";
export default _default;
