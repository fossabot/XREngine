export declare const DEG2RAD = 0.0174533;
export declare const vertexShader = "\n  #include <common>\n  attribute vec4 particlePosition;\n  attribute vec4 particleColor;\n  attribute float particleAngle;\n  varying vec4 vColor;\n  varying vec2 vUV;\n  uniform mat4 emitterMatrix;\n  #include <fog_pars_vertex>\n  void main() {\n    vUV = uv;\n    vColor = particleColor;\n    float particleScale = particlePosition.w;\n    vec4 mvPosition = viewMatrix * emitterMatrix * vec4(particlePosition.xyz, 1.0);\n    \n    vec3 rotatedPosition = position;\n    rotatedPosition.x = cos( particleAngle ) * position.x - sin( particleAngle ) * position.y;\n    rotatedPosition.y = sin( particleAngle ) * position.x + cos( particleAngle ) * position.y;\n    mvPosition.xyz += rotatedPosition * particleScale;\n    gl_Position = projectionMatrix * mvPosition;\n    #include <fog_vertex>\n  }\n";
export declare const fragmentShader = "\n  #include <common>\n  #include <fog_pars_fragment>\n  uniform sampler2D map;\n  varying vec2 vUV;\n  varying vec4 vColor;\n  void main() {\n    gl_FragColor = texture2D(map,  vUV) * vColor;\n    #include <fog_fragment>\n  }\n";
export declare const createParticleEmitter: (entity: any, configs: any) => void;
export declare const applyTransform: (entity: any, emitter: any) => void;
