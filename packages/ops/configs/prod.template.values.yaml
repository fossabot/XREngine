client:
  config:
    publicRuntimeConfig:
      apiServer: https://api.<domain>
      appServer: https://<domain>
      gameserver: https://gameserver.<domain>
      gameserverDomain: gameserver.<domain>
      dev: true
      feathersStoreKey: TheOverlay-Auth-Store
      localStorageKey: theoverlay-client-store-key-v1
      loginDisabled: true
      logo: "./logo.svg"
      siteDescription: Connected Worlds for Everyone
      siteTitle: XREngine
      title: "The Overlay"
      auth:
        enableSmsMagicLink: true
        enableEmailMagicLink: true
        enableUserPassword: true
        enableGithubSocial: true
        enableFacebookSocial: true
        enableGoogleSocial: true
        enableLinkedInSocial: true
        enableTwitterSocial: true
      alert:
        timeout: 10000
      offlineMode: false
      staticPages:
        termsOfService: "/terms-of-service"
      xr:
        enterVRbutton:
          src: https://xr3ngine-static.s3-us-east-1.amazonaws.com/icons/cardboard-icon.png
        environment:
          scene-gltf:
            name: Launchpad
            src: https://xr3ngine-scenes.s3-us-east-1.amazonaws.com/Launchpad/Launchpad.gltf
          skybox:
            height: 2048
            radius: 5000
            rotation:
              y: 0
              x: 90
              z: 90
            src: /textures/nightsky.jpg
            thetaLength: 180
            width: 2048
        grid:
          placeholderImageSrc: https://xr3ngine-static.s3-us-east-1.amazonaws.com/logo.png
          skybox:
            height: 2048
            width: 2048
            radius: 5000
            rotation:
              x: 90
              y: 0
              z: 90
            src: /textures/nightsky.jpg
            thetaLength: 180
        spoke:
          link: "https://hub.xrengine.io/spoke"
          comingSoon:
            enabled: "false"
            src: ""
          src: ""
        store:
          link: ""
          src: ""
        videoGrid:
          link: /theater
          name: theater
          src: ""
          scene-gltf:
            src: "https://xr3ngine-static.s3.amazonaws.com/assets/models/DolbyTheater/DolbyTheater.glb"
            name: dolby
          scale:
            x: 1.5
            y: 1.5
            z: 1
          offset:
            y: 3
            z: -5
          focusedOffset:
            x: 0
            y: -0.75
            z: 3
          contentWidth: 1.6
          contentHeight: 0.9
          borderSize: 0.1
        vrRoomGrid:
          name: vrRoom
          comingSoon:
            enabled: "false"
            src: ""
          link: /vrRoom
          src: ""
          scenes:
  extraEnv:
    API_ASSETS_ROUTE: /static-resource
    API_ASSETS_ACTION: assets
    API_MEDIA_ROUTE: /media
    API_MEDIA_SEARCH_ROUTE: "-search"
    API_META_ROUTE: /meta
    API_PROJECTS_ROUTE: /project
    API_RESOLVE_MEDIA_ROUTE: /resolve-media
    API_PROJECT_PUBLISH_ACTION: /publish-project
    API_SCENES_ROUTE: /collection
    API_SERVER_ADDRESS: api.<domain>
    API_SOCKET_ENDPOINT: /socket
    API_SERVER: https://api.<domain>
    CLIENT_ADDRESS: https://<domain>
    CLIENT_ENABLED: "true"
    CLIENT_SCENE_ROUTE: /scenes/
    CLIENT_LOCAL_SCENE_ROUTE: "/scene.html?scene_id="
    CORS_PROXY_SERVER: https://api.<domain>
    HOST_IP: https://api.<domain>
    HOST_PORT: "3000"
    GITHUB_ORG: xrengine
    GITHUB_REPO: spoke
    IS_MOZ: "false"
    NEXT_PUBLIC_API_SERVER: https://api.<domain>
    NODE_ENV: production
    NON_CORS_PROXY_DOMAINS: "reticulum.io,<domain>,amazonaws.com"
    ROUTER_BASE_PATH: /spoke
    SERVER_ENABLED: "false"
    SITE_DESC: Connected Worlds for Everyone
    SITE_TITLE: TheOverlay
    THUMBNAIL_ROUTE: /thumbnail/
    THUMBNAIL_SERVER: https://api.<domain>
    USE_DIRECT_UPLOAD_API: "true"
    USE_HTTPS: "true"
  image:
    repository: lagunalabs/xrengine
    pullPolicy: IfNotPresent
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: eks.amazonaws.com/nodegroup
                operator: In
                values:
                  - ng-1
  ingress:
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    hosts:
      - host: <domain>
        paths:
          - /
  service:
    type: NodePort
domain: <domain>
mariadb:
  db:
    name: <db_name>
    password: <password>
    user: <username>
  enabled: false
  externalHost: <RDS hostname>
rts:
  extraEnv:
    NAF_LISTEN_PORT: "8081"
api:
  config:
    aws:
      keys:
        access_key_id: <S3_USER_ACCESS_KEY>
        secret_access_key: <S3_USER_SECRET_KEY>
      s3:
        region: us-east-1
        static_resource_bucket: theoverlay-static-resources
      cloudfront:
        domain: resources.<domain>
      sns:
        access_key_id: <SNS_USER_ACCESS_KEY>
        application_id: <AWS_SNS_APPLICATION_ID>
        region: us-east-1
        secret_access_key: <SNS_USER_ACCESS_KEY>
        sender_id: <AWS_SNS_SENDER_ID>
    host: https://<domain>/
  extraEnv:
    APP_HOST: https://<domain>
    APP_URL: https://<domain>
    AUTH_SECRET: <INSERT_A_UUID_OR_SOMETHING_SIMILAR>
    AWS_SMS_ACCESS_KEY_ID: <SNS_USER_ACCESS_KEY>
    AWS_SMS_REGION: us-east-1
    AWS_SMS_SECRET_ACCESS_KEY: <SNS_USER_ACCESS_KEY>
    AWS_SMS_TOPIC_ARN: <SNS_TOPIC_ARN>
    CLIENT_ENABLED: "false"
    CERT: certs/cert.pem
    KEY: certs/key.pem
    FACEBOOK_CALLBACK_URL: https://<domain>/auth/oauth/facebook
    FACEBOOK_CLIENT_ID: "<FB_OAUTH_CLIENT_ID>"
    FACEBOOK_CLIENT_SECRET: "<FB_OAUTH_SECRET>"
    FORCE_DB_REFRESH: "false"
    GAMESERVER_DOMAIN: gameserver.<domain>
    GITHUB_CALLBACK_URL: https://<domain>/auth/oauth/github
    GITHUB_CLIENT_ID: "<GITHUB_OAUTH_CLIENT_ID>"
    GITHUB_CLIENT_SECRET: "<GITHUB_OAUTH_SECRET>"
    GOOGLE_CALLBACK_URL: https://<domain>/auth/oauth/google
    GOOGLE_CLIENT_ID: "<GOOGLE_OAUTH_CLIENT_ID>"
    GOOGLE_CLIENT_SECRET: "<GOOGLE_OAUTH_SECRET>"
    MAGICLINK_EMAIL_SUBJECT: Login to TheOverlay
    MAIL_FROM: info@login.<domain>
    SEVER_ENABLED: "true"
    SERVER_HOST: "api.<domain>"
    SERVER_PORT: "3030"
    SMTP_FROM_EMAIL: info@login.<domain>
    SMTP_FROM_NAME: noreply
    SMTP_HOST: email-smtp.us-east-1.amazonaws.com
    SMTP_PASS: <AWS_SMTP_PASSWORD>
    SMTP_PORT: "465"
    SMTP_SECURE: "true"
    SMTP_USER: <AWS_SMTP_USER_ID>
    STORAGE_PROVIDER: aws
    STORAGE_AWS_ACCESS_KEY_ID: <S3_USER_ACCESS_KEY>
    STORAGE_AWS_ACCESS_KEY_SECRET: <S3_USER_SECRET>
    STORAGE_CLOUDFRONT_DOMAIN: resources.<domain>
    STORAGE_S3_REGION: us-east-1
    STORAGE_S3_STATIC_RESOURCE_BUCKET: <S3_STATIC_RESOURCES_BUCKET_NAME>
    STORAGE_S3_AVATAR_DIRECTORY: avatars
    DEFAULT_AVATAR_ID: Allison
    AVATAR_FILE_ALLOWED_EXTENSIONS: ".glb,.gltf,.vrm,.fbx"
    MIN_AVATAR_FILE_SIZE: "0"
    MAX_AVATAR_FILE_SIZE: "15728640"
    MIN_THUMBNAIL_FILE_SIZE: "0"
    MAX_THUMBNAIL_FILE_SIZE: "2097152"
    STORAGE_S3_DEV_MODE: dev
    PRESIGNED_URL_EXPIRATION_DURATION: "3600"
  image:
    repository: lagunalabs/xrengine
  service:
    type: NodePort
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: eks.amazonaws.com/nodegroup
                operator: In
                values:
                  - ng-1
  ingress:
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      nginx.ingress.kubernetes.io/enable-cors: "true"
      nginx.ingress.kubernetes.io/cors-allow-origin: https://<domain>
      nginx.ingress.kubernetes.io/proxy-body-size: 256m
      nginx.ingress.kubernetes.io/affinity: cookie
      nginx.ingress.kubernetes.io/affinity-mode: persistent
    hosts:
      - host: api.<domain>
        paths:
          - /

media:
  enabled: false
  config:
    aws:
      keys:
        access_key_id: <IAM_USER_ACCESS_KEY>
        secret_access_key: <IAM_USER_SECRET_KEY>
      s3:
        region: us-east-1
        static_resource_bucket: theoverlay-static-resources
      cloudfront:
        domain: resources.<domain>
      sns:
        access_key_id: <SNS_USER_ACCESS_KEY>
        application_id: <AWS_SNS_APPLICATION_ID>
        region: us-east-1
        secret_access_key: <SNS_USER_ACCESS_KEY>
        sender_id: <AWS_SNS_SENDER_ID>
    host: https://<domain>/
  extraEnv:
    APP_HOST: https://<domain>
    APP_URL: https://<domain>
    AUTH_SECRET: <INSERT_A_UUID_OR_SOMETHING_SIMILAR>
    AWS_SMS_ACCESS_KEY_ID: <SNS_USER_ACCESS_KEY>
    AWS_SMS_REGION: us-east-1
    AWS_SMS_SECRET_ACCESS_KEY: <SNS_USER_ACCESS_KEY>
    AWS_SMS_TOPIC_ARN: <SNS_TOPIC_ARN>
    FACEBOOK_CALLBACK_URL: https://<domain>/auth/oauth/facebook
    FACEBOOK_CLIENT_ID: "<FB_OAUTH_CLIENT_ID>"
    FACEBOOK_CLIENT_SECRET: "<FB_OAUTH_SECRET>"
    FORCE_DB_REFRESH: "false"
    GITHUB_CALLBACK_URL: https://<domain>/auth/oauth/github
    GITHUB_CLIENT_ID: "<GITHUB_OAUTH_CLIENT_ID>"
    GITHUB_CLIENT_SECRET: "<GITHUB_OAUTH_SECRET>"
    GOOGLE_CALLBACK_URL: https://<domain>/auth/oauth/google
    GOOGLE_CLIENT_ID: "<GOOGLE_OAUTH_CLIENT_ID>"
    GOOGLE_CLIENT_SECRET: "<GOOGLE_OAUTH_SECRET>"
    MAGICLINK_EMAIL_SUBJECT: Login to TheOverlay
    MAIL_FROM: info@login.<domain>
    SEVER_ENABLED: "true"
    SERVER_HOSTNAME: "api.<domain>"
    SMTP_FROM_EMAIL: info@login.<domain>
    SMTP_FROM_NAME: noreply
    SMTP_HOST: email-smtp.us-east-1.amazonaws.com
    SMTP_PASS: <AWS_SMTP_PASSWORD>
    SMTP_PORT: "465"
    SMTP_SECURE: "true"
    SMTP_USER: <AWS_SMTP_USER_ID>
    STORAGE_PROVIDER: aws
    STORAGE_AWS_ACCESS_KEY_ID: <S3_USER_ACCESS_KEY>
    STORAGE_AWS_ACCESS_KEY_SECRET: <S3_USER_SECRET>
    STORAGE_CLOUDFRONT_DOMAIN: resources.<domain>
    STORAGE_S3_REGION: us-east-1
    STORAGE_S3_STATIC_RESOURCE_BUCKET: <S3_STATIC_RESOURCES_BUCKET_NAME>
  image:
    repository: lagunalabs/xrengine
  service:
    type: NodePort
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: eks.amazonaws.com/nodegroup
                operator: In
                values:
                  - ng-1
  ingress:
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      nginx.ingress.kubernetes.io/enable-cors: "true"
      nginx.ingress.kubernetes.io/cors-allow-origin: https://<domain>
      nginx.ingress.kubernetes.io/proxy-body-size: 5m
    hosts:
      - host: api.<domain>
        paths:
          - /video

gameserver:
  image:
    repository: lagunalabs/xrengine
    pullPolicy: IfNotPresent
  extraEnv:
    AUTH_SECRET: <SAME_AUTH_SECRET_AS_IN_API>
    APP_URL: https://<domain>
    GAMESERVER_ENABLED: "true"
    ROUTE53_ACCESS_KEY_ID: <ROUTE53_USER_ACCESS_KEY>
    ROUTE53_ACCESS_KEY_SECRET: <ROUTE53_USER_SECRET>
    ROUTE53_HOSTED_ZONE_ID: <ROUTE53_HOSTED_ZONE_ID>
    RTC_START_PORT: "40000"
    RTC_END_PORT: "40099"
    RTC_PORT_BLOCK_SIZE: "100"
    GAMESERVER_DOMAIN: gameserver.<domain>
    GAMESERVER_PORT: "3031"
    STORAGE_S3_STATIC_RESOURCE_BUCKET: <STATIC_RESOURCE_BUCKET_NAME>
    STORAGE_S3_REGION: us-east-1
    CERT: certs/cert.pem
    KEY: certs/key.pem
  ingress:
    host: gameserver.<domain>
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: eks.amazonaws.com/nodegroup
                operator: In
                values:
                  - ng-gameservers-1


editor:
  enabled: false
  extraEnv:
    BASE_ASSETS_PATH: https://api.<domain>/
    CORS_PROXY_SERVER: ""
    GA_TRACKING_ID: ""
    HUBS_SERVER: api.<domain>
    IS_MOZ: "false"
    NON_CORS_PROXY_DOMAINS: ""
    RETICULUM_SERVER: api.<domain>
    SENTRY_DSN: ""
    THUMBNAIL_SERVER: ""
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: eks.amazonaws.com/nodegroup
                operator: In
                values:
                  - ng-1
  ingress:
    hosts:
      - host: <domain>
        paths:
          - /create
redis:
  enabled: false
