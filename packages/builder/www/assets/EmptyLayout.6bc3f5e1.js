var e=Object.defineProperty,t=Object.getOwnPropertySymbols,r=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable,a=(t,r,o)=>r in t?e(t,r,{enumerable:!0,configurable:!0,writable:!0,value:o}):t[r]=o,n=(e,n)=>{for(var l in n||(n={}))r.call(n,l)&&a(e,l,n[l]);if(t)for(var l of t(n))o.call(n,l)&&a(e,l,n[l]);return e};import{r as l,h as i,R as s}from"./vendor.40ddfb4b.js";import{_ as c,K as p,M as m,b as d,N as f,O as g}from"./_app.e67b0e96.js";import{c as u}from"./index.1d867f8f.js";import{c as v,e as h}from"./feathers.42c2841d.js";import{B as x}from"./Box.cb35bf4d.js";import{w as E,c as _,a as b}from"./capitalize.f4eb3e2e.js";import{c as y,P as C}from"./Paper.24cff5e5.js";import{I as N}from"./IconButton.32d4e708.js";import{T as M}from"./Typography.9d0f0940.js";import{c as w,i as j,a as z}from"./createSvgIcon.f2e498dd.js";import{D as L}from"./Dialog.c787f71e.js";import{D as S}from"./DialogTitle.bed0cd09.js";var W=l.exports.forwardRef((function(e,t){var r=e.classes,o=e.className,a=e.dividers,n=void 0!==a&&a,s=i(e,["classes","className","dividers"]);return l.exports.createElement("div",c({className:_(r.root,o,n&&r.dividers),ref:t},s))})),k=E((function(e){return{root:{flex:"1 1 auto",WebkitOverflowScrolling:"touch",overflowY:"auto",padding:"8px 24px","&:first-child":{paddingTop:20}},dividers:{padding:"16px 24px",borderTop:"1px solid ".concat(e.palette.divider),borderBottom:"1px solid ".concat(e.palette.divider)}}}),{name:"MuiDialogContent"})(W),A=y(l.exports.createElement("path",{d:"M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z"})),T=y(l.exports.createElement("path",{d:"M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z"})),B=y(l.exports.createElement("path",{d:"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"})),O=y(l.exports.createElement("path",{d:"M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z"})),D=y(l.exports.createElement("path",{d:"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"})),I={success:l.exports.createElement(A,{fontSize:"inherit"}),warning:l.exports.createElement(T,{fontSize:"inherit"}),error:l.exports.createElement(B,{fontSize:"inherit"}),info:l.exports.createElement(O,{fontSize:"inherit"})},R=l.exports.createElement(D,{fontSize:"small"}),$=l.exports.forwardRef((function(e,t){var r=e.action,o=e.children,a=e.classes,n=e.className,s=e.closeText,p=void 0===s?"Close":s,m=e.color,d=e.icon,f=e.iconMapping,g=void 0===f?I:f,u=e.onClose,v=e.role,h=void 0===v?"alert":v,x=e.severity,E=void 0===x?"success":x,y=e.variant,M=void 0===y?"standard":y,w=i(e,["action","children","classes","className","closeText","color","icon","iconMapping","onClose","role","severity","variant"]);return l.exports.createElement(C,c({role:h,square:!0,elevation:0,className:_(a.root,a["".concat(M).concat(b(m||E))],n),ref:t},w),!1!==d?l.exports.createElement("div",{className:a.icon},d||g[E]||I[E]):null,l.exports.createElement("div",{className:a.message},o),null!=r?l.exports.createElement("div",{className:a.action},r):null,null==r&&u?l.exports.createElement("div",{className:a.action},l.exports.createElement(N,{size:"small","aria-label":p,title:p,color:"inherit",onClick:u},R)):null)})),P=E((function(e){var t="light"===e.palette.type?p:m,r="light"===e.palette.type?m:p;return{root:c({},e.typography.body2,{borderRadius:e.shape.borderRadius,backgroundColor:"transparent",display:"flex",padding:"6px 16px"}),standardSuccess:{color:t(e.palette.success.main,.6),backgroundColor:r(e.palette.success.main,.9),"& $icon":{color:e.palette.success.main}},standardInfo:{color:t(e.palette.info.main,.6),backgroundColor:r(e.palette.info.main,.9),"& $icon":{color:e.palette.info.main}},standardWarning:{color:t(e.palette.warning.main,.6),backgroundColor:r(e.palette.warning.main,.9),"& $icon":{color:e.palette.warning.main}},standardError:{color:t(e.palette.error.main,.6),backgroundColor:r(e.palette.error.main,.9),"& $icon":{color:e.palette.error.main}},outlinedSuccess:{color:t(e.palette.success.main,.6),border:"1px solid ".concat(e.palette.success.main),"& $icon":{color:e.palette.success.main}},outlinedInfo:{color:t(e.palette.info.main,.6),border:"1px solid ".concat(e.palette.info.main),"& $icon":{color:e.palette.info.main}},outlinedWarning:{color:t(e.palette.warning.main,.6),border:"1px solid ".concat(e.palette.warning.main),"& $icon":{color:e.palette.warning.main}},outlinedError:{color:t(e.palette.error.main,.6),border:"1px solid ".concat(e.palette.error.main),"& $icon":{color:e.palette.error.main}},filledSuccess:{color:"#fff",fontWeight:e.typography.fontWeightMedium,backgroundColor:e.palette.success.main},filledInfo:{color:"#fff",fontWeight:e.typography.fontWeightMedium,backgroundColor:e.palette.info.main},filledWarning:{color:"#fff",fontWeight:e.typography.fontWeightMedium,backgroundColor:e.palette.warning.main},filledError:{color:"#fff",fontWeight:e.typography.fontWeightMedium,backgroundColor:e.palette.error.main},icon:{marginRight:12,padding:"7px 0",display:"flex",fontSize:22,opacity:.9},message:{padding:"8px 0"},action:{display:"flex",alignItems:"center",marginLeft:"auto",paddingLeft:16,marginRight:-8}}}),{name:"MuiAlert"})($),H=l.exports.forwardRef((function(e,t){var r=e.classes,o=e.className,a=i(e,["classes","className"]);return l.exports.createElement(M,c({gutterBottom:!0,component:"div",ref:t,className:_(r.root,o)},a))})),V=E((function(e){return{root:{fontWeight:e.typography.fontWeightMedium,marginTop:-2}}}),{name:"MuiAlertTitle"})(H);const Z=u([e=>e.get("alert")],(e=>e));var q="_BoxContainer_fr9h2_1",F="_alertContainer_fr9h2_5",K="_alertBoxContainersuccess_fr9h2_16",Y="_alertBoxContainerprogress_fr9h2_26",G="_alertBoxContainererror_fr9h2_35",J="_divalertContainer_fr9h2_44",Q="_svgiconsuccess_fr9h2_61",U="_svgiconerror_fr9h2_71",X="_svgiconprogress_fr9h2_80",ee="_alerttitle_fr9h2_89";const te=e=>{const{alert:t,alertCancel:r}=e,o=t.get("type"),a=t.get("message");let n="",l="",i="",c="";return"success"==o?(n="/Notification_Success.svg",l=Q,i=K,c="Event was successful"):"error"==o?(n="/Notification_Error.svg",l=U,i=G,c="An error was encountered"):(n="/Notification_InProgress.svg",l=X,i=Y,c="Event in progress"),s.createElement("div",{className:F},"none"===o||""===a?s.createElement(x,null):s.createElement(x,{m:1,className:q},s.createElement(P,{className:i,variant:"filled",severity:t.get("type"),icon:s.createElement("img",{src:n,className:l}),onClose:e=>(e=>{e.preventDefault(),r()})(e)},s.createElement("div",{className:J},s.createElement(V,{className:ee},c),t.get("message")))))},re=v((e=>({alert:Z(e)})),(e=>({alertCancel:d(h,e)})))((e=>s.createElement(te,n({},e))));var oe={},ae=j.exports,ne=z.exports;Object.defineProperty(oe,"__esModule",{value:!0});var le=oe.default=void 0,ie=ne(l.exports),se=(0,ae(w).default)(ie.createElement("path",{d:"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"}),"Close");le=oe.default=se;const ce=u([e=>e.get("dialog")],(e=>e));function pe(){return e=>{e({type:f,content:void 0})}}var me="_dialogTitle_r1f49_8",de="_dialogCloseButton_r1f49_12",fe="_dialogContent_r1f49_18";const ge=e=>{var t;const{dialog:r,closeDialog:o}=e,a=r.get("isOpened"),n=r.get("content"),i=g();l.exports.useEffect((()=>{i.listen((()=>{o()}))}),[]);const c=e=>{e.preventDefault(),o()};return s.createElement(L,{open:a,onClose:c,"aria-labelledby":"xr-dialog",color:"background"},s.createElement(S,{disableTypography:!0,className:me},s.createElement(M,{variant:"h6"},null!=(t=n&&n.title)?t:""),s.createElement(N,{"aria-label":"close",className:de,onClick:c},s.createElement(le,null))),s.createElement(k,{className:fe},n&&n.children))},ue=v((e=>({dialog:ce(e)})),(e=>({closeDialog:d(pe,e)})))((e=>s.createElement(ge,n({},e)))),ve=({children:e,pageTitle:t})=>s.createElement(l.exports.Fragment,null,s.createElement(ue,null),s.createElement(re,null),e);export{ve as E};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
