import{r as e,h as t,u as a,R as r}from"./vendor.40ddfb4b.js";import{_ as o,az as s,aA as n,b as c,ay as i}from"./_app.e67b0e96.js";import{d as l}from"./ArrowBackIos.e70c5bef.js";import{s as d}from"./selector.cc63221d.js";import{b as m,r as p,d as f,e as u,f as v}from"./service.b9355309.js";import{s as g}from"./selector.8a0da25a.js";import{a as E,b as _}from"./service.d8de8161.js";import{c as h,i as y,a as b}from"./createSvgIcon.f2e498dd.js";import{d as x,F as C}from"./index.daa64299.js";import{d as F}from"./VerifiedUser.114e2dcf.js";import{c as S}from"./index.1d867f8f.js";import{a as j,d as N,c as I}from"./feathers.42c2841d.js";import{s as T}from"./selector.e2ee45bf.js";import{C as w,a as k}from"./CardContent.71445ad8.js";import{C as P}from"./CardMedia.d28b7db0.js";import{w as q,c as z}from"./capitalize.f4eb3e2e.js";import{T as M}from"./Typography.9d0f0940.js";import{A as B}from"./Avatar.073c615c.js";import{d as U}from"./MoreHoriz.a06f4955.js";import{B as D}from"./Button.31285e4e.js";import{P as L}from"./Popover.1d8a9ca1.js";import{s as R}from"./index.module.2ab36131.js";import"./index.b0bd5cc1.js";import"./upload.8895077e.js";import"./Paper.24cff5e5.js";import"./useControlled.e1604cb7.js";import"./selector.d1cb6f6a.js";import"./Modal.c801ca2c.js";var A=e.exports.forwardRef((function(a,r){var s=a.action,n=a.avatar,c=a.classes,i=a.className,l=a.component,d=void 0===l?"div":l,m=a.disableTypography,p=void 0!==m&&m,f=a.subheader,u=a.subheaderTypographyProps,v=a.title,g=a.titleTypographyProps,E=t(a,["action","avatar","classes","className","component","disableTypography","subheader","subheaderTypographyProps","title","titleTypographyProps"]),_=v;null==_||_.type===M||p||(_=e.exports.createElement(M,o({variant:n?"body2":"h5",className:c.title,component:"span",display:"block"},g),_));var h=f;return null==h||h.type===M||p||(h=e.exports.createElement(M,o({variant:n?"body2":"body1",className:c.subheader,color:"textSecondary",component:"span",display:"block"},u),h)),e.exports.createElement(d,o({className:z(c.root,i),ref:r},E),n&&e.exports.createElement("div",{className:c.avatar},n),e.exports.createElement("div",{className:c.content},_,h),s&&e.exports.createElement("div",{className:c.action},s))})),O=q({root:{display:"flex",alignItems:"center",padding:16},avatar:{flex:"0 0 auto",marginRight:16},action:{flex:"0 0 auto",alignSelf:"flex-start",marginTop:-8,marginRight:-8},content:{flex:"1 1 auto"},title:{},subheader:{}},{name:"MuiCardHeader"})(A),V={},H=y.exports,W=b.exports;Object.defineProperty(V,"__esModule",{value:!0});var G=V.default=void 0,J=W(e.exports),K=(0,H(h).default)(J.createElement("path",{d:"M13.5.67s.74 2.65.74 4.8c0 2.06-1.35 3.73-3.41 3.73-2.07 0-3.63-1.67-3.63-3.73l.03-.36C5.21 7.51 4 10.62 4 14c0 4.42 3.58 8 8 8s8-3.58 8-8C20 8.61 17.41 3.8 13.5.67zM11.71 19c-1.78 0-3.22-1.4-3.22-3.14 0-1.62 1.05-2.76 2.81-3.12 1.77-.36 3.6-1.21 4.62-2.58.39 1.29.59 2.65.59 4.04 0 2.65-2.15 4.8-4.8 4.8z"}),"Whatshot");G=V.default=K;var Q={},X=y.exports,Y=b.exports;Object.defineProperty(Q,"__esModule",{value:!0});var Z=Q.default=void 0,$=Y(e.exports),ee=(0,X(h).default)($.createElement("path",{d:"M9.78 18.65l.28-4.23 7.68-6.92c.34-.31-.07-.46-.52-.19L7.74 13.3 3.64 12c-.88-.25-.89-.86.2-1.3l15.97-6.16c.73-.33 1.43.18 1.15 1.3l-2.72 12.81c-.19.91-.74 1.13-1.5.71L12.6 16.3l-1.99 1.93c-.23.23-.42.42-.83.42z"}),"Telegram");Z=Q.default=ee;var te={tipItem:"_tipItem_18ruq_1",previewImage:"_previewImage_18ruq_6",eyeLine:"_eyeLine_18ruq_15",popover:"_popover_18ruq_30",iconSubContainer:"_iconSubContainer_18ruq_38",cardContent:"_cardContent_18ruq_42",iconsContainer:"_iconsContainer_18ruq_48",titleContainer:"_titleContainer_18ruq_53",flamesCount:"_flamesCount_18ruq_57",cartText:"_cartText_18ruq_61",avatar:"_avatar_18ruq_64"};const ae=S([e=>e.get("feedFires")],(e=>e));function re(e){return async(t,a)=>{try{t({type:s});const a=await j.service("feed-fires").find({query:{feedId:e}});t((r=a.data,{type:n,feedFires:r}))}catch(o){console.log(o),N(t,o.message)}var r}}function oe(e){return async t=>{try{await j.service("feed-fires").create({feedId:e}),t(m(e))}catch(a){console.log(a),N(t,a.message)}}}function se(e){return async t=>{try{await j.service("feed-fires").remove(e),t(p(e))}catch(a){console.log(a),N(t,a.message)}}}var ne=I((e=>({feedFiresState:ae(e),authState:T(e)})),(e=>({getFeedFires:c(re,e),addFireToFeed:c(oe,e),removeFireToFeed:c(se,e),updateCreatorPageState:c(E,e),updateFeedPageState:c(_,e),addViewToFeed:c(f,e)})))((t=>{e.exports.useState(!1);const[o,s]=e.exports.useState(!1),{feed:n,authState:c,getFeedFires:i,feedFiresState:l,addFireToFeed:d,removeFireToFeed:m,addViewToFeed:p,updateCreatorPageState:f,updateFeedPageState:u,removeFeed:v}=t,[g,E]=e.exports.useState(n.fires),[_,h]=e.exports.useState(!1),[y,b]=e.exports.useState(null);e.exports.useEffect((()=>{i(n.id,b),console.log("feed",n)}),[]);const{t:C}=a(),S=c.get("currentCreator").id;e.exports.useEffect((()=>{s(!!(null==y?void 0:y.data.find((e=>e.id===S))))}),[y]),e.exports.useEffect((()=>{h(!1)}),[n.id]);return e.exports.useEffect((()=>{console.log("Feed Card Feed:",n)})),n?r.createElement(r.Fragment,null,r.createElement(w,{className:te.tipItem,square:!1,elevation:0,key:n.id},_?r.createElement(P,{className:te.previewImage,component:"video",src:n.videoUrl,title:n.title,controls:!0}):r.createElement("img",{src:n.previewUrl,className:te.previewImage,alt:n.title,onClick:()=>{h(!0),p(n.id)}}),r.createElement("span",{className:te.eyeLine},n.viewsCount,r.createElement(x,{style:{fontSize:"16px"}})),r.createElement(k,{className:te.cardContent},r.createElement("section",{className:te.iconsContainer},r.createElement(O,{avatar:r.createElement(B,{src:n.creator.avatar?n.creator.avatar:"/assets/userpic.png",alt:n.creator.username,onClick:()=>f(!0,n.creator.id),className:te.avatar}),title:r.createElement(M,{variant:"h6"},n.creator.name,r.createElement("p",null,"@",n.creator.username," Â· ",n.fires," flames"),!0===n.creator.verified&&r.createElement(F,{htmlColor:"#007AFF",style:{fontSize:"13px",margin:"0 0 0 5px"}}))}),r.createElement("section",{className:te.iconSubContainer},n.isFired?r.createElement(G,{className:te.fireIcon,htmlColor:"#FF6201",onClick:()=>{return e=n.id,m(e),E(g-1),void s(!1);var e}}):r.createElement(G,{className:te.fireIcon,htmlColor:"#DDDDDD",onClick:()=>{return e=n.id,d(e),E(g+1),void s(!0);var e}}),r.createElement(Z,{onClick:()=>{Share.share({title:C("social:shareForm.arcMedia"),text:C("social:shareForm.videoCreated"),url:encodeURI(n.videoUrl),dialogTitle:C("social:shareForm.shareWithBuddies")})}}))),r.createElement(M,{className:te.cartText,variant:"h6"},n.description)))):r.createElement(r.Fragment,null)}));var ce={feedContainer:"_feedContainer_72oy1_1",backButton:"_backButton_72oy1_9",popover:"_popover_72oy1_22"};var ie=I((e=>({feedsState:d(e),popupsState:g(e)})),(e=>({getFeed:c(u,e),updateFeedPageState:c(_,e),removeFeed:c(v,e)})))((({feedsState:t,getFeed:o,popupsState:s,updateFeedPageState:n,removeFeed:c})=>{let i=null;const{t:d}=a();e.exports.useEffect((()=>o(s.get("feedId"))),[s.get("feedId")]),i=t&&!1===t.get("fetching")&&t.get("feed");const[m,p]=r.useState(null),f=Boolean(m),u=f?"simple-popover":void 0;return r.createElement("section",{className:ce.feedContainer},r.createElement("section",{className:ce.controls},r.createElement(D,{variant:"text",className:ce.backButton,onClick:()=>n(!1)},r.createElement(l,null),d("social:feed.back")),r.createElement("div",{className:ce.popover},r.createElement(D,{"aria-describedby":u,variant:"contained",onClick:e=>{p(e.currentTarget)},tabIndex:0},r.createElement(U,null)),r.createElement(L,{id:u,open:f,anchorEl:m,onClose:()=>{p(null)},anchorOrigin:{vertical:"bottom",horizontal:"center"},transformOrigin:{vertical:"top",horizontal:"center"}},r.createElement(D,{variant:"outlined",onClick:()=>{return e=i.id,t=i.previewUrl,a=i.videoUrl,c(e,t,a),void n(!1);var e,t,a}},"Delete")))),i&&r.createElement(ne,{feed:i}),i&&r.createElement(r.Fragment,null,r.createElement(M,{variant:"h5"},d("social:feed.related")),r.createElement(C,{type:"creator",creatorId:i.creator.id})))}));function le(){const e=new URLSearchParams(i().search).get("feedId").toString();return r.createElement("div",{className:R.viewport},r.createElement(ie,{feedId:e}))}export{le as default};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
