var e=Object.defineProperty,t=Object.defineProperties,n=Object.getOwnPropertyDescriptors,r=Object.getOwnPropertySymbols,a=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable,i=(t,n,r)=>n in t?e(t,n,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[n]=r,s=(e,t)=>{for(var n in t||(t={}))a.call(t,n)&&i(e,n,t[n]);if(r)for(var n of r(t))o.call(t,n)&&i(e,n,t[n]);return e},c=(e,r)=>t(e,n(r));import{r as l,h as m,R as d,u as f}from"./vendor.40ddfb4b.js";import{_ as p,b as u}from"./_app.e67b0e96.js";import{k as x}from"./service.2cb21ce4.js";import{s as g}from"./Auth.module.2ea06a41.js";import{c as b}from"./feathers.42c2841d.js";import{C as v}from"./Container.8fcf9e42.js";import{T as j}from"./Typography.9d0f0940.js";import{w,c as h}from"./capitalize.f4eb3e2e.js";import{T as y}from"./TextField.cbc648d1.js";import{B as S}from"./Button.31285e4e.js";import"./index.b0bd5cc1.js";import"./InputLabel.7f84de76.js";import"./useControlled.e1604cb7.js";import"./Paper.24cff5e5.js";import"./Modal.c801ca2c.js";import"./Popover.1d8a9ca1.js";import"./List.52b49b17.js";var C=[0,1,2,3,4,5,6,7,8,9,10],E=["auto",!0,1,2,3,4,5,6,7,8,9,10,11,12];function P(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=parseFloat(e);return"".concat(n/t).concat(String(e).replace(String(n),"")||"px")}var W=l.exports.forwardRef((function(e,t){var n=e.alignContent,r=void 0===n?"stretch":n,a=e.alignItems,o=void 0===a?"stretch":a,i=e.classes,s=e.className,c=e.component,d=void 0===c?"div":c,f=e.container,u=void 0!==f&&f,x=e.direction,g=void 0===x?"row":x,b=e.item,v=void 0!==b&&b,j=e.justify,w=e.justifyContent,y=void 0===w?"flex-start":w,S=e.lg,C=void 0!==S&&S,E=e.md,P=void 0!==E&&E,W=e.sm,O=void 0!==W&&W,I=e.spacing,z=void 0===I?0:I,M=e.wrap,D=void 0===M?"wrap":M,N=e.xl,B=void 0!==N&&N,k=e.xs,G=void 0!==k&&k,T=e.zeroMinWidth,F=void 0!==T&&T,L=m(e,["alignContent","alignItems","classes","className","component","container","direction","item","justify","justifyContent","lg","md","sm","spacing","wrap","xl","xs","zeroMinWidth"]),R=h(i.root,s,u&&[i.container,0!==z&&i["spacing-xs-".concat(String(z))]],v&&i.item,F&&i.zeroMinWidth,"row"!==g&&i["direction-xs-".concat(String(g))],"wrap"!==D&&i["wrap-xs-".concat(String(D))],"stretch"!==o&&i["align-items-xs-".concat(String(o))],"stretch"!==r&&i["align-content-xs-".concat(String(r))],"flex-start"!==(j||y)&&i["justify-content-xs-".concat(String(j||y))],!1!==G&&i["grid-xs-".concat(String(G))],!1!==O&&i["grid-sm-".concat(String(O))],!1!==P&&i["grid-md-".concat(String(P))],!1!==C&&i["grid-lg-".concat(String(C))],!1!==B&&i["grid-xl-".concat(String(B))]);return l.exports.createElement(d,p({className:R,ref:t},L))})),O=w((function(e){return p({root:{},container:{boxSizing:"border-box",display:"flex",flexWrap:"wrap",width:"100%"},item:{boxSizing:"border-box",margin:"0"},zeroMinWidth:{minWidth:0},"direction-xs-column":{flexDirection:"column"},"direction-xs-column-reverse":{flexDirection:"column-reverse"},"direction-xs-row-reverse":{flexDirection:"row-reverse"},"wrap-xs-nowrap":{flexWrap:"nowrap"},"wrap-xs-wrap-reverse":{flexWrap:"wrap-reverse"},"align-items-xs-center":{alignItems:"center"},"align-items-xs-flex-start":{alignItems:"flex-start"},"align-items-xs-flex-end":{alignItems:"flex-end"},"align-items-xs-baseline":{alignItems:"baseline"},"align-content-xs-center":{alignContent:"center"},"align-content-xs-flex-start":{alignContent:"flex-start"},"align-content-xs-flex-end":{alignContent:"flex-end"},"align-content-xs-space-between":{alignContent:"space-between"},"align-content-xs-space-around":{alignContent:"space-around"},"justify-content-xs-center":{justifyContent:"center"},"justify-content-xs-flex-end":{justifyContent:"flex-end"},"justify-content-xs-space-between":{justifyContent:"space-between"},"justify-content-xs-space-around":{justifyContent:"space-around"},"justify-content-xs-space-evenly":{justifyContent:"space-evenly"}},function(e,t){var n={};return C.forEach((function(r){var a=e.spacing(r);0!==a&&(n["spacing-".concat(t,"-").concat(r)]={margin:"-".concat(P(a,2)),width:"calc(100% + ".concat(P(a),")"),"& > $item":{padding:P(a,2)}})})),n}(e,"xs"),e.breakpoints.keys.reduce((function(t,n){return function(e,t,n){var r={};E.forEach((function(e){var t="grid-".concat(n,"-").concat(e);if(!0!==e)if("auto"!==e){var a="".concat(Math.round(e/12*1e8)/1e6,"%");r[t]={flexBasis:a,flexGrow:0,maxWidth:a}}else r[t]={flexBasis:"auto",flexGrow:0,maxWidth:"none"};else r[t]={flexBasis:0,flexGrow:1,maxWidth:"100%"}})),"xs"===n?p(e,r):e[t.breakpoints.up(n)]=r}(t,e,n),t}),{}))}),{name:"MuiGrid"})(W);const I=e=>{const{forgotPassword:t,classes:n}=e,[r,a]=l.exports.useState({email:"",isSubmitted:!1}),{t:o}=f();return d.createElement(v,{component:"main",maxWidth:"xs"},d.createElement("div",{className:g.paper},d.createElement(j,{component:"h1",variant:"h5"},o("user:auth.forgotPassword.header")),d.createElement(j,{variant:"body2",color:"textSecondary",align:"center"},o("user:auth.forgotPassword.enterEmail")),d.createElement("form",{className:g.form,noValidate:!0,onSubmit:e=>(e=>{e.preventDefault(),t(r.email),a(c(s({},r),{isSubmitted:!0}))})(e)},d.createElement(O,{container:!0},d.createElement(O,{item:!0,xs:12},d.createElement(y,{variant:"outlined",margin:"normal",required:!0,fullWidth:!0,id:"email",label:o("user:auth.forgotPassword.lbl-email"),name:"email",autoComplete:"email",autoFocus:!0,onChange:e=>(e=>{e.preventDefault(),a(c(s({},r),{[e.target.name]:e.target.value}))})(e)})),d.createElement(O,{item:!0,xs:12},d.createElement(S,{type:"submit",fullWidth:!0,variant:"contained",color:"primary",className:g.submit},o("user:auth.forgotPassword.lbl-submit"))))),r.isSubmitted?d.createElement(j,{variant:"body2",color:"textSecondary",align:"center"},d.createElement("br",null),o("user:auth.forgotPassword.emailSent")):""))};var z=b(null,(e=>({forgotPassword:u(x,e)})))((e=>d.createElement(I,s({},e))));const M=()=>d.createElement(z,null);export{M as ForgotPasswordPage,M as default};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
