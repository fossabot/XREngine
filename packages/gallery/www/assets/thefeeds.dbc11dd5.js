import{R as e,r as t}from"./vendor.40ddfb4b.js";import{D as a}from"./index.ffb0f38f.js";import{X as i,Y as r,Z as l,$ as n,a0 as o,b as s}from"./_app.e67b0e96.js";import{a as d,d as c,c as m}from"./feathers.42c2841d.js";import{u as p}from"./upload.8895077e.js";import{d as u}from"./service.2cb21ce4.js";import{m as f}from"./makeStyles.dc74902c.js";import{T as h}from"./Typography.9d0f0940.js";import{B as g}from"./Button.31285e4e.js";import{T as v,a as E,b,c as y,d as j,e as T}from"./TableRow.e6cbfdcb.js";import{P as x}from"./Paper.24cff5e5.js";import{M as F}from"./Modal.c801ca2c.js";import{c as w,d as S,b as C,e as k}from"./InputLabel.7f84de76.js";import{c as I}from"./index.1d867f8f.js";import"./capitalize.f4eb3e2e.js";import"./createSvgIcon.f2e498dd.js";import"./useControlled.e1604cb7.js";import"./IconButton.32d4e708.js";import"./Backdrop.9ef065d7.js";import"./Slide.1e39d9a9.js";import"./List.52b49b17.js";import"./index.b0bd5cc1.js";function A(){return async e=>{try{e(i());const t=await d.service("thefeeds").find();e(r(t.data))}catch(t){console.log(t),c(e,t.message)}}}function D(e){return async t=>{try{const a=await p(e.video,null);console.log("storedVideo",a);const i=await d.service("thefeeds").create({title:e.title,videoId:a.file_id,description:e.description});t(l(i))}catch(a){console.log(a),c(t,a.message)}}}function L(e){return async t=>{try{let a={id:e.id,title:e.title,videoId:e.video,description:e.description};if("object"==typeof e.video){const t=await p(e.video,null);a.videoId=t.file_id}const i=await d.service("thefeeds").patch(a.id,a);t(n(i))}catch(a){console.log(a),c(t,a.message)}}}function N(e){return async t=>{try{await d.service("thefeeds").remove(e),t(o(e))}catch(a){console.log(a),c(t,a.message)}}}const B=({create:a,list:i,deleteTheFeed:r,update:l})=>{var n=i.map((e=>{return t=e.title,a=e.id,i=e.videoUrl,r=e.description,l=e.videoId,{title:t,id:a,videoUrl:i,description:r,videoId:l};var t,a,i,r,l}));const o=f({table:{minWidth:650},form:{display:"Flex",flexDirection:"column",marginLeft:"auto",marginRight:"auto",marginTop:"90px",width:"max-content",padding:"60px",background:"#fff"}})(),[s,d]=e.useState(!1),[c,m]=t.exports.useState(null),[p,u]=t.exports.useState(null),[I,A]=t.exports.useState(null),[D,L]=t.exports.useState(null),N=(e,t,a,i)=>{d(!0),e&&m(e),t&&u(t),a&&A(a),i&&L(i)},B=()=>{d(!1)};return e.createElement("div",null,e.createElement(h,{variant:"h1",color:"primary"},"Social Feeds List"),e.createElement(g,{onClick:()=>{N("","","","")},variant:"outlined",color:"secondary"},"Create"),e.createElement(v,{component:x},e.createElement(E,{className:o.table,size:"small","aria-label":"a dense table"},e.createElement(b,null,e.createElement(y,null,e.createElement(j,null,"Title"),e.createElement(j,{align:"right"},"Id"),e.createElement(j,{align:"right"},"Video"),e.createElement(j,{align:"right"},"Description"))),n&&n.length>0&&e.createElement(T,null,n.reverse().map((t=>e.createElement(y,{key:t.title},e.createElement(j,{component:"th",scope:"row"},t.title),e.createElement(j,{align:"right"},t.id),e.createElement(j,{align:"right"},t.videoUrl),e.createElement(j,{align:"right"},t.description),e.createElement(j,{align:"right"},e.createElement(g,{onClick:()=>N(t.title,t.id,t.videoId,t.description)},"Edit")),e.createElement(j,{align:"right"},e.createElement(g,{onClick:()=>r(t.id)},"Delete")))))))),e.createElement(F,{open:s,onClose:B,"aria-labelledby":"simple-modal-title","aria-describedby":"simple-modal-description"},e.createElement("div",null,e.createElement("form",{className:o.form,noValidate:!0,onSubmit:e=>(e=>{e.preventDefault(),""!==p&&null!==p?l({id:p,title:c,video:I,description:D}):a({title:c,description:D,video:I}),d(!1),m(""),u(""),A(""),L("")})(e)},e.createElement(w,null,e.createElement(S,{htmlFor:"thefeeds-title"},"Title"),e.createElement(C,{value:c||"",onChange:e=>m(e.target.value),id:"thefeeds-title",type:"text","aria-describedby":"my-helper-text"}),e.createElement(k,{id:"my-helper-text"},"Tip&Trick Title.")),e.createElement("input",{value:p||"",onChange:e=>u(e.target.value),id:"thefeeds-id",type:"number",hidden:!0}),e.createElement(g,{variant:"contained",component:"label"},"Upload File",e.createElement("input",{onChange:e=>{A(e.target.files[0])},id:"thefeeds-video",type:"file",hidden:!0})),e.createElement(w,null,e.createElement(S,{htmlFor:"thefeeds-description"},"Description"),e.createElement(C,{value:D||"",onChange:e=>L(e.target.value),id:"thefeeds-description",type:"text","aria-describedby":"my-helper-text"}),e.createElement(k,{id:"my-helper-text"},"Tip&Trick short description.")),e.createElement(g,{variant:"contained",color:"primary",type:"submit"},"Save"),e.createElement(g,{variant:"contained",color:"secondary",onClick:()=>B()},"Close")))))},U=I([e=>e.get("thefeeds")],(e=>e));var R=m((e=>({theFeedsState:U(e)})),(e=>({getTheFeedsNew:s(A,e),createTheFeedsNew:s(D,e),removeTheFeeds:s(N,e),updateTheFeedsAsAdmin:s(L,e),doLoginAuto:s(u,e)})))((({theFeedsState:i,getTheFeedsNew:r,createTheFeedsNew:l,removeTheFeeds:n,updateTheFeedsAsAdmin:o,doLoginAuto:s})=>{t.exports.useEffect((()=>{s(!0,!0),r()}),[]);const d=(null==i?void 0:i.get("thefeeds"))?null==i?void 0:i.get("thefeeds"):[];return e.createElement(e.Fragment,null,e.createElement("div",null,e.createElement(a,null,e.createElement(B,{create:e=>{l(e)},list:d,deleteTheFeed:e=>{n(e)},update:e=>{o(e)}}))))}));export{R as default};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
