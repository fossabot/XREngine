import{r as e,u as t,R as s}from"./vendor.40ddfb4b.js";import{b as r}from"./_app.e67b0e96.js";import{c as a,i as d,a as i}from"./createSvgIcon.f2e498dd.js";import{s as o}from"./selector.d1cb6f6a.js";import{s as m}from"./selector.e2ee45bf.js";import{s as f}from"./selector.cc63221d.js";import{g as p,s as c,a as _}from"./service.b9355309.js";import{s as g}from"./selector.8a0da25a.js";import{b as n}from"./service.d8de8161.js";import{c as l}from"./feathers.42c2841d.js";import{C as u}from"./CardContent.71445ad8.js";import{C as h}from"./CardMedia.d28b7db0.js";import{T as F}from"./Typography.9d0f0940.js";var w={},I=d.exports,y=i.exports;Object.defineProperty(w,"__esModule",{value:!0});var v=w.default=void 0,z=y(e.exports),C=(0,I(a).default)(z.createElement("path",{d:"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z"}),"Visibility");v=w.default=C;var b={feedContainer:"_feedContainer_4phwz_1",emptyList:"_emptyList_4phwz_13",creatorItem:"_creatorItem_4phwz_21",listItem_width2:"_listItem_width2_4phwz_25",listItem_top1:"_listItem_top1_4phwz_38",listItem_top2:"_listItem_top2_4phwz_41",listItem_width3:"_listItem_width3_4phwz_44",listItem_width1:"_listItem_width1_4phwz_49",width1_no_right_padding:"_width1_no_right_padding_4phwz_54",starLine:"_starLine_4phwz_74",previewImage:"_previewImage_4phwz_81",eyeLine:"_eyeLine_4phwz_86"};var j=l((e=>({feedsState:f(e),creatorState:m(e),authState:o(e),popupsState:g(e)})),(e=>({getFeeds:r(p,e),setFeedAsFeatured:r(c,e),setFeedNotFeatured:r(_,e),updateFeedPageState:r(n,e)})))((({feedsState:r,getFeeds:a,type:d,creatorId:i,popupsState:o,creatorState:m,setFeedAsFeatured:f,setFeedNotFeatured:p,authState:c,updateFeedPageState:_})=>{const[g,n]=e.exports.useState([]),{t:l}=t();return e.exports.useEffect((()=>{var e,t,s;if("creator"===d||"bookmark"===d||"myFeatured"===d||"fired"===d)a(d,i);else{const r=null!=(s=null==(t=null==(e=c.get("authUser"))?void 0:e.identityProvider)?void 0:t.type)?s:"guest";a("guest"!==r?"featured":"featuredGuest")}}),[d,i,r.get("feedsFeatured")]),e.exports.useEffect((()=>("featured"===d||!d)&&!1===r.get("feedsFetching")&&n(r.get("feedsFeatured"))),[r.get("feedsFetching"),r.get("feedsFeatured")]),e.exports.useEffect((()=>("featured"===d||!d)&&!1===r.get("feedsFeaturedFetching")&&n(r.get("feedsFeatured"))),[r.get("feedsFeaturedFetching"),r.get("feedsFeatured")]),e.exports.useEffect((()=>"creator"===d&&!1===r.get("feedsCreatorFetching")&&n(r.get("feedsCreator"))),[r.get("feedsCreatorFetching"),r.get("feedsCreator")]),e.exports.useEffect((()=>"bookmark"===d&&!1===r.get("feedsBookmarkFetching")&&n(r.get("feedsBookmark"))),[r.get("feedsBookmarkFetching"),r.get("feedsBookmark")]),e.exports.useEffect((()=>"myFeatured"===d&&!1===r.get("myFeaturedFetching")&&n(r.get("myFeatured"))),[r.get("myFeaturedFetching"),r.get("myFeatured")]),e.exports.useEffect((()=>"fired"===d&&!1===r.get("feedsFiredFetching")&&n(r.get("feedsFired"))),[r.get("feedsFiredFetching"),r.get("feedsFired")]),s.createElement("section",{className:b.feedContainer},g&&g.length>0?g.map(((e,t)=>{const r=0===t||t%8==0||t%8==2||t%8==5?"listItem_width2":t%8==1?"listItem_width3":"listItem_width1",a=t%8==2?"listItem_top1":t%8==5?"listItem_top2":"",d=t%8==4||t%8==7?"width1_no_right_padding":"";return s.createElement(u,{className:b.creatorItem+" "+b[r]+" "+b[a]+" "+b[d],elevation:0,key:t},s.createElement(h,{className:b.previewImage,image:e.previewUrl,onClick:()=>{if(!0===o.get("creatorPage")&&!0===o.get("feedPage")){_(!1);const t=setTimeout((()=>{clearInterval(t),_(!0,e.id)}),100)}else _(!0,e.id)}}),s.createElement("span",{className:b.eyeLine},e.viewsCount,s.createElement(v,{style:{fontSize:"16px"}})))})):s.createElement(F,{className:b.emptyList},l("social:featured.empty-list")))}));export{j as F,v as d};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
